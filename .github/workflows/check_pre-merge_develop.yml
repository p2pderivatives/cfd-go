name: develop pre-merge check

on: 
  push:
    branches:
    - develop
    - dev_v[0-9]+
    paths-ignore:
    - 'README.md'
    - '*.dockerfile'
    - '*.json'
    - 'LICENSE'
    - 'pc/**'
  pull_request:
    branches:
    - develop
    - dev_v[0-9]+

env:
  CMAKE_VERSION: 3.17.2

jobs:
  cmake-build:
    name: cmake build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-20.04, ubuntu-18.04]
        go-version: [1.13.x, 1.14.x, 1.15.x]
        exclude:
          - os: macos-latest
            go-version: 1.13.x
        include:
          - os: windows-latest
            generator: MSYS Makefiles
          - os: macos-latest
            generator: Unix Makefiles
          - os: ubuntu-20.04
            generator: Unix Makefiles
          - os: ubuntu-18.04
            generator: Unix Makefiles
          - os: ubuntu-18.04
            generator: Unix Makefiles
            go-version: 1.12.x

    steps:
    - name: setup go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/checkout@v1
    - name: cmake-generate
      run: |
        cmake -S . -B build -G "${{ matrix.generator }}"
        cmake -DENABLE_SHARED=on -DENABLE_TESTS=off -DTARGET_RPATH="/usr/local/lib;/usr/local/lib64;./build/Release" --build build
    - name: cmake-build
      run: |
        cmake --version
        cmake --build build --config Release --parallel 2
    - name: go_test-windows
      if: runner.os == 'Windows'
      run: .\go_test.bat
    - name: go_test-mac
      if: runner.os == 'macOS'
      run: |
        cd build
        sudo make install
        cd ..
        LD_LIBRARY_PATH=/usr/local/lib go test
    - name: go_test-ubuntu
      if: runner.os == 'Linux'
      run: ./go_test.sh
