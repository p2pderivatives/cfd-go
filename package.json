{
  "name": "cfd-go",
  "version": "0.0.0",
  "description": "cfd-go",
  "scripts": {
    "format_all": "go fmt cfdgo_test.go",
    "cmake_all": "run-s cmake_configure cmake_build",
    "cmake_make_install": "run-s cmake_clean cmake_release_make cmake_make_install_pkg",
    "cmake_install": "run-s cmake_clean cmake_release cmake_install_pkg",
    "cmake_install_pkg": "run-script-os",
    "cmake_install_pkg:win32": "cmake --install build",
    "cmake_install_pkg:linux": "sudo cmake --install build",
    "cmake_install_pkg:darwin": "sudo cmake --install build",
    "cmake_make_install_pkg": "run-script-os",
    "cmake_make_install_pkg:win32": "cmake --install build",
    "cmake_make_install_pkg:linux": "cd build && sudo make install",
    "cmake_make_install_pkg:darwin": "cd build && sudo make install",
    "cmake_release": "run-s cmake_release_configure cmake_build",
    "cmake_release_configure": "run-script-os",
    "cmake_release_configure:win32": "run-s cmake_release_make_configure",
    "cmake_release_configure:linux": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_TESTS=off --CDENABLE_JS_WRAPPER=off --CDENABLE_CAPI=on --CDTARGET_RPATH=\"/usr/local/lib;./build/Release\" -g",
    "cmake_release_configure:darwin": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_TESTS=off --CDENABLE_JS_WRAPPER=off --CDENABLE_CAPI=on --CDTARGET_RPATH=\"@executable_path;/usr/local/lib;./build/Release\" -C",
    "cmake_release_make": "run-s cmake_release_make_configure cmake_build",
    "cmake_release_make_configure": "run-script-os",
    "cmake_release_make_configure:win32": "cmake -S . -B build -G \"MinGW Makefiles\" && cmake -DENABLE_SHARED=on -DENABLE_TESTS=off -DENABLE_JS_WRAPPER=off -DENABLE_CAPI=on -DCMAKE_BUILD_TYPE=Release --build build",
    "cmake_release_make_configure:linux": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_TESTS=off --CDENABLE_JS_WRAPPER=off --CDENABLE_CAPI=on --CDTARGET_RPATH=\"/usr/local/lib;./build/Release\" -g -m",
    "cmake_release_make_configure:darwin": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_TESTS=off --CDENABLE_JS_WRAPPER=off --CDENABLE_CAPI=on --CDTARGET_RPATH=\"@executable_path;/usr/local/lib;./build/Release\" -C -m",
    "cmake_configure": "run-script-os",
    "cmake_configure:win32": "cmake -S . -B build -G \"MinGW Makefiles\" && cmake -DENABLE_SHARED=on -DENABLE_JS_WRAPPER=off -DCMAKE_BUILD_TYPE=Release --build build",
    "cmake_configure:linux": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_JS_WRAPPER=off --CDENABLE_CAPI=on --CDTARGET_RPATH=./build/Release -g",
    "cmake_configure:darwin": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_JS_WRAPPER=off --CDENABLE_CAPI=on --CDTARGET_RPATH=\"@executable_path;./build/Release\" -C",
    "cmake_quiet": "run-s cmake_quiet_configure cmake_quiet_build",
    "cmake_quiet_configure": "run-script-os",
    "cmake_quiet_configure:win32": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_JS_WRAPPER=off --CDENABLE_CAPI=on -i",
    "cmake_quiet_configure:linux": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_JS_WRAPPER=off --CDENABLE_CAPI=on --CDTARGET_RPATH=./build/Release -g -i",
    "cmake_quiet_configure:darwin": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_JS_WRAPPER=off --CDENABLE_CAPI=on --CDTARGET_RPATH=\"@executable_path;./build/Release\" -C -i",
    "cmake_elem_off": "run-s cmake_elem_off_configure cmake_build",
    "cmake_elem_off_configure": "run-script-os",
    "cmake_elem_off_configure:win32": "cmake -S . -B build -G \"MinGW Makefiles\" && cmake -DENABLE_SHARED=on -DENABLE_JS_WRAPPER=off -DCMAKE_BUILD_TYPE=Release -DENABLE_ELEMENTS=off --build build",
    "cmake_elem_off_configure:linux": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_ELEMENTS=off --CDENABLE_JS_WRAPPER=off --CDENABLE_CAPI=on --CDTARGET_RPATH=./build/Release -g",
    "cmake_elem_off_configure:darwin": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_ELEMENTS=off --CDENABLE_JS_WRAPPER=off --CDENABLE_CAPI=on --CDTARGET_RPATH=\"@executable_path;./build/Release\" -C",
    "cmake_log_all": "run-s cmake_log_configure cmake_build",
    "cmake_log_configure": "run-script-os",
    "cmake_log_configure:win32": "cmake -S . -B build -G \"MinGW Makefiles\" && cmake -DENABLE_SHARED=on -DENABLE_JS_WRAPPER=off -DCMAKE_BUILD_TYPE=Release -DCFDCORE_DEBUG=on --build build",
    "cmake_log_configure:linux": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_JS_WRAPPER=off --CDENABLE_CAPI=on --CDTARGET_RPATH=./build/Release --CDCFDCORE_DEBUG=on -g",
    "cmake_log_configure:darwin": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_JS_WRAPPER=off --CDENABLE_CAPI=on --CDTARGET_RPATH=\"@executable_path;./build/Release\" --CDCFDCORE_DEBUG=on -C",
    "cmake_con_all": "run-s cmake_con_configure cmake_build",
    "cmake_con_configure": "run-script-os",
    "cmake_con_configure:win32": "cmake -S . -B build -G \"MinGW Makefiles\" && cmake -DENABLE_SHARED=on -DENABLE_JS_WRAPPER=off -DCMAKE_BUILD_TYPE=Release -DCFDCORE_DEBUG=on -DCFDCORE_LOG_CONSOLE=on --build build",
    "cmake_con_configure:linux": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_JS_WRAPPER=off --CDENABLE_CAPI=on --CDTARGET_RPATH=./build/Release --CDCFDCORE_DEBUG=on --CDCFDCORE_LOG_CONSOLE=on -g",
    "cmake_con_configure:darwin": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_JS_WRAPPER=off --CDENABLE_CAPI=on --CDTARGET_RPATH=\"@executable_path;./build/Release\" --CDCFDCORE_DEBUG=on --CDCFDCORE_LOG_CONSOLE=on -C",
    "cmake_debug_all": "run-s cmake_debug_configure cmake_debug_build",
    "cmake_debug_configure": "run-script-os",
    "cmake_debug_configure:win32": "cmake -S . -B build -G \"MinGW Makefiles\" && cmake -DENABLE_SHARED=on -DENABLE_JS_WRAPPER=off -DCMAKE_BUILD_TYPE=Debug -DCFDCORE_DEBUG=on --build build",
    "cmake_debug_configure:linux": "cmake-js configure -O build --CDENABLE_SHARED=on --CDCFDCORE_DEBUG=on --CDENABLE_CAPI=on --CDTARGET_RPATH=./build/Debug -g -D",
    "cmake_debug_configure:darwin": "cmake-js configure -O build --CDENABLE_SHARED=on --CDCFDCORE_DEBUG=on --CDENABLE_CAPI=on --CDTARGET_RPATH=\"@executable_path;./build/Debug\" -C -D",
    "cmake_gcov_all": "run-s cmake_gcov_configure cmake_debug_build",
    "cmake_gcov_configure": "run-script-os",
    "cmake_gcov_configure:win32": "cmake -S . -B build -G \"MinGW Makefiles\" && cmake -DENABLE_SHARED=on -DENABLE_JS_WRAPPER=off -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=on --build build",
    "cmake_gcov_configure:linux": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_COVERAGE=on --CDENABLE_CAPI=on --CDTARGET_RPATH=./build/Debug -g -D",
    "cmake_gcov_configure:darwin": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_COVERAGE=on --CDENABLE_CAPI=on --CDTARGET_RPATH=\"@executable_path;./build/Debug\" -C -D",
    "cmake_clang": "run-s cmake_clang_configure cmake_build",
    "cmake_clang_configure": "run-script-os",
    "cmake_clang_configure:win32": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_CAPI=on -C",
    "cmake_clang_configure:linux": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_CAPI=on --CDTARGET_RPATH=./build/Release -C",
    "cmake_clang_configure:darwin": "cmake-js configure -O build --CDENABLE_SHARED=on --CDENABLE_CAPI=on --CDTARGET_RPATH=\"@executable_path;./build/Release\" -C",
    "cmake_gcc": "run-s cmake_gcc_configure cmake_build",
    "cmake_gcc_configure": "run-script-os",
    "cmake_gcc_configure:win32": "cmake -S . -B build -G \"MinGW Makefiles\" && cmake -DENABLE_SHARED=on -DENABLE_JS_WRAPPER=off -DCMAKE_BUILD_TYPE=Release --build build",
    "cmake_gcc_configure:linux": "cmake-js configure -O build --CDENABLE_SHARED=on --CDTARGET_RPATH=./wrap_js/build/Release -g",
    "cmake_gcc_configure:darwin": "cmake-js configure -O build --CDENABLE_SHARED=on --CDTARGET_RPATH=\"@executable_path;./wrap_js/build/Release\" -g",
    "cmake_ninja": "run-s cmake_ninja_configure cmake_build",
    "cmake_ninja_configure": "run-script-os",
    "cmake_ninja_configure:win32": "cmake -S . -B build -G \"Ninja\" && cmake -DENABLE_SHARED=on -DENABLE_JS_WRAPPER=off -DCMAKE_BUILD_TYPE=Release --build build",
    "cmake_ninja_configure:linux": "run-s cmake_configure",
    "cmake_ninja_configure:darwin": "run-s cmake_configure",
    "cmake_static": "run-s cmake_static_configure cmake_build",
    "cmake_static_configure": "run-script-os",
    "cmake_static_configure:win32": "cmake -S . -B build -G \"MinGW Makefiles\" && cmake -DENABLE_SHARED=off -DENABLE_JS_WRAPPER=off -DCMAKE_BUILD_TYPE=Release --build build",
    "cmake_static_configure:linux": "cmake-js configure -O build --CDENABLE_SHARED=off --CDENABLE_CAPI=on --CDTARGET_RPATH=./build/Release -g",
    "cmake_static_configure:darwin": "cmake-js configure -O build --CDENABLE_SHARED=off --CDENABLE_CAPI=on --CDTARGET_RPATH=\"@executable_path;./build/Release\" -C",
    "cmake_static_debug": "run-s cmake_static_debug_configure cmake_debug_build",
    "cmake_static_debug_configure": "run-script-os",
    "cmake_static_debug_configure:win32": "cmake-js configure -O build --CDENABLE_SHARED=off --CDENABLE_CAPI=on --CDCFDCORE_DEBUG=on -D",
    "cmake_static_debug_configure:linux": "cmake-js configure -O build --CDENABLE_SHARED=off --CDENABLE_CAPI=on --CDCFDCORE_DEBUG=on --CDTARGET_RPATH=./build/Release -g -D",
    "cmake_static_debug_configure:darwin": "cmake-js configure -O build --CDENABLE_SHARED=off --CDENABLE_CAPI=on --CDCFDCORE_DEBUG=on --CDTARGET_RPATH=\"@executable_path;./build/Release\" -C -D",
    "cmake_build": "cmake --build build --parallel 4",
    "cmake_debug_build": "cmake-js build -O build -D",
    "cmake_quiet_build": "cmake-js build -O build -i",
    "cmake_clean": "cmake-js clean -O build",
    "test_all": "run-s ctest go_test",
    "ctest": "cd build && ctest -C Release",
    "ctest_debug": "cd build && ctest -C Debug",
    "ctest_quiet": "cd build && ctest --quiet -C Release",
    "go_test": "run-script-os",
    "go_test:win32": "go_test.bat",
    "go_test:linux": "./go_test.sh",
    "go_test:darwin": "./go_test.sh",
    "git_subm_update": "git submodule -q foreach git fetch -q && git submodule -q update -i",
    "check": "run-s ctest_quiet go_test",
    "check_all": "run-s cmake_clean git_subm_update cmake_quiet ctest_quiet go_test"
  },
  "author": "",
  "license": "MIT",
  "gypfile": false,
  "dependencies": {
    "cmake-js": "^5.3.2",
    "big-integer": "^1.6.26",
    "bindings": "*",
    "nan": "^2.14.0",
    "node-gyp": "^5.0.5",
    "tape": "^4.8.0"
  },
  "devDependencies": {
    "npm-run-all": "^4.1.5",
    "run-script-os": "^1.0.5"
  }
}
