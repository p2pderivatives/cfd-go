/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: swig.i

#define SWIGMODULE cfdgo

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef int intgo;
typedef unsigned int uintgo;


# if !defined(__clang__) && (defined(__i386__) || defined(__x86_64__))
#   define SWIGSTRUCTPACKED __attribute__((__packed__, __gcc_struct__))
# else
#   define SWIGSTRUCTPACKED __attribute__((__packed__))
# endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } SWIGSTRUCTPACKED a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


static void Swig_free(void* p) {
  free(p);
}

static void* Swig_malloc(int c) {
  return malloc(c);
}


#include "cfdc/cfdcapi_common.h"
#include "cfdc/cfdcapi_address.h"
#include "cfdc/cfdcapi_coin.h"
#include "cfdc/cfdcapi_elements_address.h"
#include "cfdc/cfdcapi_elements_transaction.h"
#include "cfdc/cfdcapi_key.h"
#include "cfdc/cfdcapi_ledger.h"
#include "cfdc/cfdcapi_script.h"
#include "cfdc/cfdcapi_transaction.h"

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_cfdgo_455848a691f6477f(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void *_wrap_Swig_malloc_cfdgo_455848a691f6477f(intgo _swig_go_0) {
  int arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (void *)Swig_malloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdSuccess_cfdgo_455848a691f6477f() {
  CfdErrorCode result;
  intgo _swig_go_result;
  
  
  result = kCfdSuccess;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdUnknownError_cfdgo_455848a691f6477f() {
  CfdErrorCode result;
  intgo _swig_go_result;
  
  
  result = kCfdUnknownError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdInternalError_cfdgo_455848a691f6477f() {
  CfdErrorCode result;
  intgo _swig_go_result;
  
  
  result = kCfdInternalError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdMemoryFullError_cfdgo_455848a691f6477f() {
  CfdErrorCode result;
  intgo _swig_go_result;
  
  
  result = kCfdMemoryFullError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdIllegalArgumentError_cfdgo_455848a691f6477f() {
  CfdErrorCode result;
  intgo _swig_go_result;
  
  
  result = kCfdIllegalArgumentError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdIllegalStateError_cfdgo_455848a691f6477f() {
  CfdErrorCode result;
  intgo _swig_go_result;
  
  
  result = kCfdIllegalStateError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdOutOfRangeError_cfdgo_455848a691f6477f() {
  CfdErrorCode result;
  intgo _swig_go_result;
  
  
  result = kCfdOutOfRangeError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdInvalidSettingError_cfdgo_455848a691f6477f() {
  CfdErrorCode result;
  intgo _swig_go_result;
  
  
  result = kCfdInvalidSettingError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdConnectionError_cfdgo_455848a691f6477f() {
  CfdErrorCode result;
  intgo _swig_go_result;
  
  
  result = kCfdConnectionError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDiskAccessError_cfdgo_455848a691f6477f() {
  CfdErrorCode result;
  intgo _swig_go_result;
  
  
  result = kCfdDiskAccessError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdSignVerificationError_cfdgo_455848a691f6477f() {
  CfdErrorCode result;
  intgo _swig_go_result;
  
  
  result = kCfdSignVerificationError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdEnableBitcoin_cfdgo_455848a691f6477f() {
  CfdLibraryFunction result;
  intgo _swig_go_result;
  
  
  result = kCfdEnableBitcoin;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdEnableElements_cfdgo_455848a691f6477f() {
  CfdLibraryFunction result;
  intgo _swig_go_result;
  
  
  result = kCfdEnableElements;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CfdGetSupportedFunction_cfdgo_455848a691f6477f(uint64_t *_swig_go_0) {
  uint64_t *arg1 = (uint64_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(uint64_t **)&_swig_go_0; 
  
  result = (int)CfdGetSupportedFunction(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdInitialize_cfdgo_455848a691f6477f() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)CfdInitialize();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdFinalize_cfdgo_455848a691f6477f(bool _swig_go_0) {
  bool arg1 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = (bool)_swig_go_0; 
  
  result = (int)CfdFinalize(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdCreateHandle_cfdgo_455848a691f6477f(void **_swig_go_0) {
  void **arg1 = (void **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void ***)&_swig_go_0; 
  
  result = (int)CfdCreateHandle(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdCreateSimpleHandle_cfdgo_455848a691f6477f(void **_swig_go_0) {
  void **arg1 = (void **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void ***)&_swig_go_0; 
  
  result = (int)CfdCreateSimpleHandle(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdCloneHandle_cfdgo_455848a691f6477f(void *_swig_go_0, void **_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void **arg2 = (void **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void ***)&_swig_go_1; 
  
  result = (int)CfdCloneHandle(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdCopyErrorState_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)CfdCopyErrorState(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdFreeHandle_cfdgo_455848a691f6477f(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  result = (int)CfdFreeHandle(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdFreeBuffer_cfdgo_455848a691f6477f(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  result = (int)CfdFreeBuffer(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdGetLastErrorCode_cfdgo_455848a691f6477f(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  result = (int)CfdGetLastErrorCode(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdGetLastErrorMessage_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_* _swig_go_1) {
  void *arg1 = (void *) 0 ;
  char **arg2 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  
  result = (int)CfdGetLastErrorMessage(arg1,arg2);
  _swig_go_result = result; 
  {
    if (arg2 && *arg2) {
      _swig_go_1->n = strlen(*arg2);
    }
  }
  return _swig_go_result;
}


intgo _wrap_CfdRequestExecuteJson_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char **arg4 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdRequestExecuteJson(arg1,(char const *)arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdSerializeByteData_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_* _swig_go_2) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(char ***)&_swig_go_2; 
  
  result = (int)CfdSerializeByteData(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  {
    if (arg3 && *arg3) {
      _swig_go_2->n = strlen(*arg3);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_kCfdNetworkMainnet_cfdgo_455848a691f6477f() {
  CfdNetworkType result;
  intgo _swig_go_result;
  
  
  result = kCfdNetworkMainnet;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdNetworkTestnet_cfdgo_455848a691f6477f() {
  CfdNetworkType result;
  intgo _swig_go_result;
  
  
  result = kCfdNetworkTestnet;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdNetworkRegtest_cfdgo_455848a691f6477f() {
  CfdNetworkType result;
  intgo _swig_go_result;
  
  
  result = kCfdNetworkRegtest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdNetworkLiquidv1_cfdgo_455848a691f6477f() {
  CfdNetworkType result;
  intgo _swig_go_result;
  
  
  result = kCfdNetworkLiquidv1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdNetworkElementsRegtest_cfdgo_455848a691f6477f() {
  CfdNetworkType result;
  intgo _swig_go_result;
  
  
  result = kCfdNetworkElementsRegtest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdNetworkCustomChain_cfdgo_455848a691f6477f() {
  CfdNetworkType result;
  intgo _swig_go_result;
  
  
  result = kCfdNetworkCustomChain;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdP2shAddress_cfdgo_455848a691f6477f() {
  CfdAddressType result;
  intgo _swig_go_result;
  
  
  result = kCfdP2shAddress;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdP2pkhAddress_cfdgo_455848a691f6477f() {
  CfdAddressType result;
  intgo _swig_go_result;
  
  
  result = kCfdP2pkhAddress;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdP2wshAddress_cfdgo_455848a691f6477f() {
  CfdAddressType result;
  intgo _swig_go_result;
  
  
  result = kCfdP2wshAddress;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdP2wpkhAddress_cfdgo_455848a691f6477f() {
  CfdAddressType result;
  intgo _swig_go_result;
  
  
  result = kCfdP2wpkhAddress;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdP2shP2wshAddress_cfdgo_455848a691f6477f() {
  CfdAddressType result;
  intgo _swig_go_result;
  
  
  result = kCfdP2shP2wshAddress;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdP2shP2wpkhAddress_cfdgo_455848a691f6477f() {
  CfdAddressType result;
  intgo _swig_go_result;
  
  
  result = kCfdP2shP2wpkhAddress;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdP2sh_cfdgo_455848a691f6477f() {
  CfdHashType result;
  intgo _swig_go_result;
  
  
  result = kCfdP2sh;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdP2pkh_cfdgo_455848a691f6477f() {
  CfdHashType result;
  intgo _swig_go_result;
  
  
  result = kCfdP2pkh;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdP2wsh_cfdgo_455848a691f6477f() {
  CfdHashType result;
  intgo _swig_go_result;
  
  
  result = kCfdP2wsh;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdP2wpkh_cfdgo_455848a691f6477f() {
  CfdHashType result;
  intgo _swig_go_result;
  
  
  result = kCfdP2wpkh;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdP2shP2wsh_cfdgo_455848a691f6477f() {
  CfdHashType result;
  intgo _swig_go_result;
  
  
  result = kCfdP2shP2wsh;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdP2shP2wpkh_cfdgo_455848a691f6477f() {
  CfdHashType result;
  intgo _swig_go_result;
  
  
  result = kCfdP2shP2wpkh;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersionNone_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersionNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion0_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion0;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion1_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion2_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion3_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion3;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion4_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion4;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion5_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion5;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion6_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion6;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion7_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion7;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion8_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion8;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion9_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion9;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion10_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion10;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion11_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion11;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion12_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion13_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion13;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion14_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion14;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion15_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion15;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdWitnessVersion16_cfdgo_455848a691f6477f() {
  CfdWitnessVersion result;
  intgo _swig_go_result;
  
  
  result = kCfdWitnessVersion16;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdSigHashAll_cfdgo_455848a691f6477f() {
  CfdSighashType result;
  intgo _swig_go_result;
  
  
  result = kCfdSigHashAll;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdSigHashNone_cfdgo_455848a691f6477f() {
  CfdSighashType result;
  intgo _swig_go_result;
  
  
  result = kCfdSigHashNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdSigHashSingle_cfdgo_455848a691f6477f() {
  CfdSighashType result;
  intgo _swig_go_result;
  
  
  result = kCfdSigHashSingle;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDescriptorScriptNull_cfdgo_455848a691f6477f() {
  CfdDescriptorScriptType result;
  intgo _swig_go_result;
  
  
  result = kCfdDescriptorScriptNull;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDescriptorScriptSh_cfdgo_455848a691f6477f() {
  CfdDescriptorScriptType result;
  intgo _swig_go_result;
  
  
  result = kCfdDescriptorScriptSh;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDescriptorScriptWsh_cfdgo_455848a691f6477f() {
  CfdDescriptorScriptType result;
  intgo _swig_go_result;
  
  
  result = kCfdDescriptorScriptWsh;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDescriptorScriptPk_cfdgo_455848a691f6477f() {
  CfdDescriptorScriptType result;
  intgo _swig_go_result;
  
  
  result = kCfdDescriptorScriptPk;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDescriptorScriptPkh_cfdgo_455848a691f6477f() {
  CfdDescriptorScriptType result;
  intgo _swig_go_result;
  
  
  result = kCfdDescriptorScriptPkh;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDescriptorScriptWpkh_cfdgo_455848a691f6477f() {
  CfdDescriptorScriptType result;
  intgo _swig_go_result;
  
  
  result = kCfdDescriptorScriptWpkh;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDescriptorScriptCombo_cfdgo_455848a691f6477f() {
  CfdDescriptorScriptType result;
  intgo _swig_go_result;
  
  
  result = kCfdDescriptorScriptCombo;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDescriptorScriptMulti_cfdgo_455848a691f6477f() {
  CfdDescriptorScriptType result;
  intgo _swig_go_result;
  
  
  result = kCfdDescriptorScriptMulti;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDescriptorScriptSortedMulti_cfdgo_455848a691f6477f() {
  CfdDescriptorScriptType result;
  intgo _swig_go_result;
  
  
  result = kCfdDescriptorScriptSortedMulti;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDescriptorScriptAddr_cfdgo_455848a691f6477f() {
  CfdDescriptorScriptType result;
  intgo _swig_go_result;
  
  
  result = kCfdDescriptorScriptAddr;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDescriptorScriptRaw_cfdgo_455848a691f6477f() {
  CfdDescriptorScriptType result;
  intgo _swig_go_result;
  
  
  result = kCfdDescriptorScriptRaw;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDescriptorKeyNull_cfdgo_455848a691f6477f() {
  CfdDescriptorKeyType result;
  intgo _swig_go_result;
  
  
  result = kCfdDescriptorKeyNull;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDescriptorKeyPublic_cfdgo_455848a691f6477f() {
  CfdDescriptorKeyType result;
  intgo _swig_go_result;
  
  
  result = kCfdDescriptorKeyPublic;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDescriptorKeyBip32_cfdgo_455848a691f6477f() {
  CfdDescriptorKeyType result;
  intgo _swig_go_result;
  
  
  result = kCfdDescriptorKeyBip32;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdDescriptorKeyBip32Priv_cfdgo_455848a691f6477f() {
  CfdDescriptorKeyType result;
  intgo _swig_go_result;
  
  
  result = kCfdDescriptorKeyBip32Priv;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CfdCreateAddress_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, intgo _swig_go_4, _gostring_* _swig_go_5, _gostring_* _swig_go_6, _gostring_* _swig_go_7) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int arg5 ;
  char **arg6 = (char **) 0 ;
  char **arg7 = (char **) 0 ;
  char **arg8 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = (int)_swig_go_4; 
  arg6 = *(char ***)&_swig_go_5; 
  arg7 = *(char ***)&_swig_go_6; 
  arg8 = *(char ***)&_swig_go_7; 
  
  result = (int)CfdCreateAddress(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,arg7,arg8);
  _swig_go_result = result; 
  {
    if (arg6 && *arg6) {
      _swig_go_5->n = strlen(*arg6);
    }
  }
  {
    if (arg7 && *arg7) {
      _swig_go_6->n = strlen(*arg7);
    }
  }
  {
    if (arg8 && *arg8) {
      _swig_go_7->n = strlen(*arg8);
    }
  }
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdInitializeMultisigScript_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, void **_swig_go_3) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  int arg3 ;
  void **arg4 = (void **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(void ***)&_swig_go_3; 
  
  result = (int)CfdInitializeMultisigScript(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdAddMultisigScriptData_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (int)CfdAddMultisigScriptData(arg1,arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdFinalizeMultisigScript_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, uint32_t *_swig_go_2, _gostring_* _swig_go_3, _gostring_* _swig_go_4, _gostring_* _swig_go_5) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32_t arg3 ;
  char **arg4 = (char **) 0 ;
  char **arg5 = (char **) 0 ;
  char **arg6 = (char **) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(char ***)&_swig_go_4; 
  arg6 = *(char ***)&_swig_go_5; 
  
  result = (int)CfdFinalizeMultisigScript(arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  {
    if (arg6 && *arg6) {
      _swig_go_5->n = strlen(*arg6);
    }
  }
  return _swig_go_result;
}


intgo _wrap_CfdFreeMultisigScriptHandle_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)CfdFreeMultisigScriptHandle(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdParseDescriptor_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, void **_swig_go_4, uint32_t *_swig_go_5) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  void **arg5 = (void **) 0 ;
  uint32_t *arg6 = (uint32_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(void ***)&_swig_go_4; 
  arg6 = *(uint32_t **)&_swig_go_5; 
  
  result = (int)CfdParseDescriptor(arg1,(char const *)arg2,arg3,(char const *)arg4,arg5,arg6);
  _swig_go_result = result; 
  free(arg2); 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdGetDescriptorData_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, uint32_t *_swig_go_2, uint32_t *_swig_go_3, uint32_t *_swig_go_4, intgo *_swig_go_5, _gostring_* _swig_go_6, _gostring_* _swig_go_7, intgo *_swig_go_8, _gostring_* _swig_go_9, intgo *_swig_go_10, _gostring_* _swig_go_11, _gostring_* _swig_go_12, _gostring_* _swig_go_13, bool *_swig_go_14, uint32_t *_swig_go_15, uint32_t *_swig_go_16) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32_t arg3 ;
  uint32_t *arg4 = (uint32_t *) 0 ;
  uint32_t *arg5 = (uint32_t *) 0 ;
  int *arg6 = (int *) 0 ;
  char **arg7 = (char **) 0 ;
  char **arg8 = (char **) 0 ;
  int *arg9 = (int *) 0 ;
  char **arg10 = (char **) 0 ;
  int *arg11 = (int *) 0 ;
  char **arg12 = (char **) 0 ;
  char **arg13 = (char **) 0 ;
  char **arg14 = (char **) 0 ;
  bool *arg15 = (bool *) 0 ;
  uint32_t *arg16 = (uint32_t *) 0 ;
  uint32_t *arg17 = (uint32_t *) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = *(uint32_t **)&_swig_go_3; 
  arg5 = *(uint32_t **)&_swig_go_4; 
  arg6 = *(int **)&_swig_go_5; 
  arg7 = *(char ***)&_swig_go_6; 
  arg8 = *(char ***)&_swig_go_7; 
  arg9 = *(int **)&_swig_go_8; 
  arg10 = *(char ***)&_swig_go_9; 
  arg11 = *(int **)&_swig_go_10; 
  arg12 = *(char ***)&_swig_go_11; 
  arg13 = *(char ***)&_swig_go_12; 
  arg14 = *(char ***)&_swig_go_13; 
  arg15 = *(bool **)&_swig_go_14; 
  arg16 = *(uint32_t **)&_swig_go_15; 
  arg17 = *(uint32_t **)&_swig_go_16; 
  
  result = (int)CfdGetDescriptorData(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
  _swig_go_result = result; 
  {
    if (arg7 && *arg7) {
      _swig_go_6->n = strlen(*arg7);
    }
  }
  {
    if (arg8 && *arg8) {
      _swig_go_7->n = strlen(*arg8);
    }
  }
  {
    if (arg10 && *arg10) {
      _swig_go_9->n = strlen(*arg10);
    }
  }
  {
    if (arg12 && *arg12) {
      _swig_go_11->n = strlen(*arg12);
    }
  }
  {
    if (arg13 && *arg13) {
      _swig_go_12->n = strlen(*arg13);
    }
  }
  {
    if (arg14 && *arg14) {
      _swig_go_13->n = strlen(*arg14);
    }
  }
  return _swig_go_result;
}


intgo _wrap_CfdGetDescriptorMultisigKey_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, uint32_t *_swig_go_2, intgo *_swig_go_3, _gostring_* _swig_go_4, _gostring_* _swig_go_5, _gostring_* _swig_go_6) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32_t arg3 ;
  int *arg4 = (int *) 0 ;
  char **arg5 = (char **) 0 ;
  char **arg6 = (char **) 0 ;
  char **arg7 = (char **) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = *(int **)&_swig_go_3; 
  arg5 = *(char ***)&_swig_go_4; 
  arg6 = *(char ***)&_swig_go_5; 
  arg7 = *(char ***)&_swig_go_6; 
  
  result = (int)CfdGetDescriptorMultisigKey(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  {
    if (arg6 && *arg6) {
      _swig_go_5->n = strlen(*arg6);
    }
  }
  {
    if (arg7 && *arg7) {
      _swig_go_6->n = strlen(*arg7);
    }
  }
  return _swig_go_result;
}


intgo _wrap_CfdFreeDescriptorHandle_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)CfdFreeDescriptorHandle(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdGetDescriptorChecksum_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char **arg4 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdGetDescriptorChecksum(arg1,arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdGetAddressesFromMultisig_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, void **_swig_go_4, uint32_t *_swig_go_5) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int arg4 ;
  void **arg5 = (void **) 0 ;
  uint32_t *arg6 = (uint32_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(void ***)&_swig_go_4; 
  arg6 = *(uint32_t **)&_swig_go_5; 
  
  result = (int)CfdGetAddressesFromMultisig(arg1,(char const *)arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetAddressFromMultisigKey_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, uint32_t *_swig_go_2, _gostring_* _swig_go_3, _gostring_* _swig_go_4) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32_t arg3 ;
  char **arg4 = (char **) 0 ;
  char **arg5 = (char **) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(char ***)&_swig_go_4; 
  
  result = (int)CfdGetAddressFromMultisigKey(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  return _swig_go_result;
}


intgo _wrap_CfdFreeAddressesMultisigHandle_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)CfdFreeAddressesMultisigHandle(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdGetAddressFromLockingScript_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char **arg4 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdGetAddressFromLockingScript(arg1,(char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetAddressInfo_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, intgo *_swig_go_2, intgo *_swig_go_3, intgo *_swig_go_4, _gostring_* _swig_go_5, _gostring_* _swig_go_6) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  char **arg6 = (char **) 0 ;
  char **arg7 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  arg5 = *(int **)&_swig_go_4; 
  arg6 = *(char ***)&_swig_go_5; 
  arg7 = *(char ***)&_swig_go_6; 
  
  result = (int)CfdGetAddressInfo(arg1,(char const *)arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  {
    if (arg6 && *arg6) {
      _swig_go_5->n = strlen(*arg6);
    }
  }
  {
    if (arg7 && *arg7) {
      _swig_go_6->n = strlen(*arg7);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_kCfdCoinSelectionExponent_cfdgo_455848a691f6477f() {
  CfdCoinSelectionOption result;
  intgo _swig_go_result;
  
  
  result = kCfdCoinSelectionExponent;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdCoinSelectionMinimumBits_cfdgo_455848a691f6477f() {
  CfdCoinSelectionOption result;
  intgo _swig_go_result;
  
  
  result = kCfdCoinSelectionMinimumBits;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdEstimateFeeExponent_cfdgo_455848a691f6477f() {
  CfdEstimateFeeOption result;
  intgo _swig_go_result;
  
  
  result = kCfdEstimateFeeExponent;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdEstimateFeeMinimumBits_cfdgo_455848a691f6477f() {
  CfdEstimateFeeOption result;
  intgo _swig_go_result;
  
  
  result = kCfdEstimateFeeMinimumBits;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CfdInitializeCoinSelection_cfdgo_455848a691f6477f(void *_swig_go_0, uint32_t *_swig_go_1, uint32_t *_swig_go_2, _gostring_ _swig_go_3, int64_t *_swig_go_4, double _swig_go_5, double _swig_go_6, double _swig_go_7, int64_t *_swig_go_8, void **_swig_go_9) {
  void *arg1 = (void *) 0 ;
  uint32_t arg2 ;
  uint32_t arg3 ;
  char *arg4 = (char *) 0 ;
  int64_t arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  int64_t arg9 ;
  void **arg10 = (void **) 0 ;
  uint32_t *argp2 ;
  uint32_t *argp3 ;
  int64_t *argp5 ;
  int64_t *argp9 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  argp5 = (int64_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg5 = (int64_t)*argp5;
  
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  
  argp9 = (int64_t *)_swig_go_8;
  if (argp9 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg9 = (int64_t)*argp9;
  
  arg10 = *(void ***)&_swig_go_9; 
  
  result = (int)CfdInitializeCoinSelection(arg1,arg2,arg3,(char const *)arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  _swig_go_result = result; 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdAddCoinSelectionUtxo_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, int32_t *_swig_go_2, _gostring_ _swig_go_3, uint32_t *_swig_go_4, int64_t *_swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int32_t arg3 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  int64_t arg6 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  int32_t *argp3 ;
  uint32_t *argp5 ;
  int64_t *argp6 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (int32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg3 = (int32_t)*argp3;
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  argp5 = (uint32_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg5 = (uint32_t)*argp5;
  
  
  argp6 = (int64_t *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg6 = (int64_t)*argp6;
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  
  result = (int)CfdAddCoinSelectionUtxo(arg1,arg2,arg3,(char const *)arg4,arg5,arg6,(char const *)arg7,(char const *)arg8);
  _swig_go_result = result; 
  free(arg4); 
  free(arg7); 
  free(arg8); 
  return _swig_go_result;
}


intgo _wrap_CfdAddCoinSelectionUtxoTemplate_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, int32_t *_swig_go_2, _gostring_ _swig_go_3, uint32_t *_swig_go_4, int64_t *_swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7, _gostring_ _swig_go_8) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int32_t arg3 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  int64_t arg6 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  char *arg9 = (char *) 0 ;
  int32_t *argp3 ;
  uint32_t *argp5 ;
  int64_t *argp6 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (int32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg3 = (int32_t)*argp3;
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  argp5 = (uint32_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg5 = (uint32_t)*argp5;
  
  
  argp6 = (int64_t *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg6 = (int64_t)*argp6;
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  
  arg9 = (char *)malloc(_swig_go_8.n + 1);
  memcpy(arg9, _swig_go_8.p, _swig_go_8.n);
  arg9[_swig_go_8.n] = '\0';
  
  
  result = (int)CfdAddCoinSelectionUtxoTemplate(arg1,arg2,arg3,(char const *)arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,(char const *)arg9);
  _swig_go_result = result; 
  free(arg4); 
  free(arg7); 
  free(arg8); 
  free(arg9); 
  return _swig_go_result;
}


intgo _wrap_CfdAddCoinSelectionAmount_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, uint32_t *_swig_go_2, int64_t *_swig_go_3, _gostring_ _swig_go_4) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32_t arg3 ;
  int64_t arg4 ;
  char *arg5 = (char *) 0 ;
  uint32_t *argp3 ;
  int64_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  
  argp4 = (int64_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg4 = (int64_t)*argp4;
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = (int)CfdAddCoinSelectionAmount(arg1,arg2,arg3,arg4,(char const *)arg5);
  _swig_go_result = result; 
  free(arg5); 
  return _swig_go_result;
}


intgo _wrap_CfdSetOptionCoinSelection_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, int64_t *_swig_go_3, double _swig_go_4, bool _swig_go_5) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  int64_t arg4 ;
  double arg5 ;
  bool arg6 ;
  int64_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  argp4 = (int64_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg4 = (int64_t)*argp4;
  
  arg5 = (double)_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  
  result = (int)CfdSetOptionCoinSelection(arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdFinalizeCoinSelection_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, int64_t *_swig_go_2) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int64_t *arg3 = (int64_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(int64_t **)&_swig_go_2; 
  
  result = (int)CfdFinalizeCoinSelection(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdGetSelectedCoinIndex_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, uint32_t *_swig_go_2, int32_t *_swig_go_3) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32_t arg3 ;
  int32_t *arg4 = (int32_t *) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = *(int32_t **)&_swig_go_3; 
  
  result = (int)CfdGetSelectedCoinIndex(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdGetSelectedCoinAssetAmount_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, uint32_t *_swig_go_2, int64_t *_swig_go_3) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32_t arg3 ;
  int64_t *arg4 = (int64_t *) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = *(int64_t **)&_swig_go_3; 
  
  result = (int)CfdGetSelectedCoinAssetAmount(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdFreeCoinSelectionHandle_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)CfdFreeCoinSelectionHandle(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdInitializeEstimateFee_cfdgo_455848a691f6477f(void *_swig_go_0, void **_swig_go_1, bool _swig_go_2) {
  void *arg1 = (void *) 0 ;
  void **arg2 = (void **) 0 ;
  bool arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void ***)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (int)CfdInitializeEstimateFee(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdAddTxInForEstimateFee_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, _gostring_ _swig_go_4, _gostring_ _swig_go_5, bool _swig_go_6, bool _swig_go_7, bool _swig_go_8, uint32_t *_swig_go_9, _gostring_ _swig_go_10) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  bool arg7 ;
  bool arg8 ;
  bool arg9 ;
  uint32_t arg10 ;
  char *arg11 = (char *) 0 ;
  uint32_t *argp4 ;
  uint32_t *argp10 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (bool)_swig_go_6; 
  arg8 = (bool)_swig_go_7; 
  arg9 = (bool)_swig_go_8; 
  
  argp10 = (uint32_t *)_swig_go_9;
  if (argp10 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg10 = (uint32_t)*argp10;
  
  
  arg11 = (char *)malloc(_swig_go_10.n + 1);
  memcpy(arg11, _swig_go_10.p, _swig_go_10.n);
  arg11[_swig_go_10.n] = '\0';
  
  
  result = (int)CfdAddTxInForEstimateFee(arg1,arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6,arg7,arg8,arg9,arg10,(char const *)arg11);
  _swig_go_result = result; 
  free(arg3); 
  free(arg5); 
  free(arg6); 
  free(arg11); 
  return _swig_go_result;
}


intgo _wrap_CfdAddTxInTemplateForEstimateFee_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, _gostring_ _swig_go_4, _gostring_ _swig_go_5, bool _swig_go_6, bool _swig_go_7, bool _swig_go_8, uint32_t *_swig_go_9, _gostring_ _swig_go_10, _gostring_ _swig_go_11) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  bool arg7 ;
  bool arg8 ;
  bool arg9 ;
  uint32_t arg10 ;
  char *arg11 = (char *) 0 ;
  char *arg12 = (char *) 0 ;
  uint32_t *argp4 ;
  uint32_t *argp10 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (bool)_swig_go_6; 
  arg8 = (bool)_swig_go_7; 
  arg9 = (bool)_swig_go_8; 
  
  argp10 = (uint32_t *)_swig_go_9;
  if (argp10 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg10 = (uint32_t)*argp10;
  
  
  arg11 = (char *)malloc(_swig_go_10.n + 1);
  memcpy(arg11, _swig_go_10.p, _swig_go_10.n);
  arg11[_swig_go_10.n] = '\0';
  
  
  arg12 = (char *)malloc(_swig_go_11.n + 1);
  memcpy(arg12, _swig_go_11.p, _swig_go_11.n);
  arg12[_swig_go_11.n] = '\0';
  
  
  result = (int)CfdAddTxInTemplateForEstimateFee(arg1,arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6,arg7,arg8,arg9,arg10,(char const *)arg11,(char const *)arg12);
  _swig_go_result = result; 
  free(arg3); 
  free(arg5); 
  free(arg6); 
  free(arg11); 
  free(arg12); 
  return _swig_go_result;
}


intgo _wrap_CfdSetOptionEstimateFee_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, int64_t *_swig_go_3, double _swig_go_4, bool _swig_go_5) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  int64_t arg4 ;
  double arg5 ;
  bool arg6 ;
  int64_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  argp4 = (int64_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg4 = (int64_t)*argp4;
  
  arg5 = (double)_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  
  result = (int)CfdSetOptionEstimateFee(arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdFinalizeEstimateFee_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, int64_t *_swig_go_4, int64_t *_swig_go_5, bool _swig_go_6, double _swig_go_7) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int64_t *arg5 = (int64_t *) 0 ;
  int64_t *arg6 = (int64_t *) 0 ;
  bool arg7 ;
  double arg8 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(int64_t **)&_swig_go_4; 
  arg6 = *(int64_t **)&_swig_go_5; 
  arg7 = (bool)_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  
  result = (int)CfdFinalizeEstimateFee(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,arg7,arg8);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdFreeEstimateFeeHandle_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)CfdFreeEstimateFeeHandle(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdCreateConfidentialAddress_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char **arg4 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdCreateConfidentialAddress(arg1,(char const *)arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdParseConfidentialAddress_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_* _swig_go_2, _gostring_* _swig_go_3, intgo *_swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  char **arg4 = (char **) 0 ;
  int *arg5 = (int *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(char ***)&_swig_go_2; 
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(int **)&_swig_go_4; 
  
  result = (int)CfdParseConfidentialAddress(arg1,(char const *)arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  {
    if (arg3 && *arg3) {
      _swig_go_2->n = strlen(*arg3);
    }
  }
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_kCfdBlindOptionMinimumRangeValue_cfdgo_455848a691f6477f() {
  CfdBlindOption result;
  intgo _swig_go_result;
  
  
  result = kCfdBlindOptionMinimumRangeValue;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdBlindOptionExponent_cfdgo_455848a691f6477f() {
  CfdBlindOption result;
  intgo _swig_go_result;
  
  
  result = kCfdBlindOptionExponent;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdBlindOptionMinimumBits_cfdgo_455848a691f6477f() {
  CfdBlindOption result;
  intgo _swig_go_result;
  
  
  result = kCfdBlindOptionMinimumBits;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CfdInitializeConfidentialTx_cfdgo_455848a691f6477f(void *_swig_go_0, uint32_t *_swig_go_1, uint32_t *_swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  uint32_t arg2 ;
  uint32_t arg3 ;
  char **arg4 = (char **) 0 ;
  uint32_t *argp2 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdInitializeConfidentialTx(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  return _swig_go_result;
}


intgo _wrap_CfdAddConfidentialTxIn_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, uint32_t *_swig_go_4, _gostring_* _swig_go_5) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  uint32_t arg5 ;
  char **arg6 = (char **) 0 ;
  uint32_t *argp4 ;
  uint32_t *argp5 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  argp5 = (uint32_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg5 = (uint32_t)*argp5;
  
  arg6 = *(char ***)&_swig_go_5; 
  
  result = (int)CfdAddConfidentialTxIn(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  {
    if (arg6 && *arg6) {
      _swig_go_5->n = strlen(*arg6);
    }
  }
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdAddConfidentialTxOut_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, int64_t *_swig_go_3, _gostring_ _swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7, _gostring_* _swig_go_8) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int64_t arg4 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  char **arg9 = (char **) 0 ;
  int64_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (int64_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg4 = (int64_t)*argp4;
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  arg9 = *(char ***)&_swig_go_8; 
  
  result = (int)CfdAddConfidentialTxOut(arg1,(char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7,(char const *)arg8,arg9);
  _swig_go_result = result; 
  {
    if (arg9 && *arg9) {
      _swig_go_8->n = strlen(*arg9);
    }
  }
  free(arg2); 
  free(arg3); 
  free(arg5); 
  free(arg6); 
  free(arg7); 
  free(arg8); 
  return _swig_go_result;
}


intgo _wrap_CfdUpdateConfidentialTxOut_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, uint32_t *_swig_go_2, _gostring_ _swig_go_3, int64_t *_swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7, _gostring_ _swig_go_8, _gostring_* _swig_go_9) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32_t arg3 ;
  char *arg4 = (char *) 0 ;
  int64_t arg5 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  char *arg9 = (char *) 0 ;
  char **arg10 = (char **) 0 ;
  uint32_t *argp3 ;
  int64_t *argp5 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  argp5 = (int64_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg5 = (int64_t)*argp5;
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  
  arg9 = (char *)malloc(_swig_go_8.n + 1);
  memcpy(arg9, _swig_go_8.p, _swig_go_8.n);
  arg9[_swig_go_8.n] = '\0';
  
  arg10 = *(char ***)&_swig_go_9; 
  
  result = (int)CfdUpdateConfidentialTxOut(arg1,(char const *)arg2,arg3,(char const *)arg4,arg5,(char const *)arg6,(char const *)arg7,(char const *)arg8,(char const *)arg9,arg10);
  _swig_go_result = result; 
  {
    if (arg10 && *arg10) {
      _swig_go_9->n = strlen(*arg10);
    }
  }
  free(arg2); 
  free(arg4); 
  free(arg6); 
  free(arg7); 
  free(arg8); 
  free(arg9); 
  return _swig_go_result;
}


intgo _wrap_CfdGetConfidentialTxInfo_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_* _swig_go_2, _gostring_* _swig_go_3, _gostring_* _swig_go_4, uint32_t *_swig_go_5, uint32_t *_swig_go_6, uint32_t *_swig_go_7, uint32_t *_swig_go_8, uint32_t *_swig_go_9) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  char **arg4 = (char **) 0 ;
  char **arg5 = (char **) 0 ;
  uint32_t *arg6 = (uint32_t *) 0 ;
  uint32_t *arg7 = (uint32_t *) 0 ;
  uint32_t *arg8 = (uint32_t *) 0 ;
  uint32_t *arg9 = (uint32_t *) 0 ;
  uint32_t *arg10 = (uint32_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(char ***)&_swig_go_2; 
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(char ***)&_swig_go_4; 
  arg6 = *(uint32_t **)&_swig_go_5; 
  arg7 = *(uint32_t **)&_swig_go_6; 
  arg8 = *(uint32_t **)&_swig_go_7; 
  arg9 = *(uint32_t **)&_swig_go_8; 
  arg10 = *(uint32_t **)&_swig_go_9; 
  
  result = (int)CfdGetConfidentialTxInfo(arg1,(char const *)arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  _swig_go_result = result; 
  {
    if (arg3 && *arg3) {
      _swig_go_2->n = strlen(*arg3);
    }
  }
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetConfidentialTxIn_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, uint32_t *_swig_go_2, _gostring_* _swig_go_3, uint32_t *_swig_go_4, uint32_t *_swig_go_5, _gostring_* _swig_go_6) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32_t arg3 ;
  char **arg4 = (char **) 0 ;
  uint32_t *arg5 = (uint32_t *) 0 ;
  uint32_t *arg6 = (uint32_t *) 0 ;
  char **arg7 = (char **) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(uint32_t **)&_swig_go_4; 
  arg6 = *(uint32_t **)&_swig_go_5; 
  arg7 = *(char ***)&_swig_go_6; 
  
  result = (int)CfdGetConfidentialTxIn(arg1,(char const *)arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  {
    if (arg7 && *arg7) {
      _swig_go_6->n = strlen(*arg7);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetConfidentialTxInWitness_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, uint32_t *_swig_go_2, uint32_t *_swig_go_3, _gostring_* _swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  char **arg5 = (char **) 0 ;
  uint32_t *argp3 ;
  uint32_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  arg5 = *(char ***)&_swig_go_4; 
  
  result = (int)CfdGetConfidentialTxInWitness(arg1,(char const *)arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetConfidentialTxInPeginWitness_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, uint32_t *_swig_go_2, uint32_t *_swig_go_3, _gostring_* _swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  char **arg5 = (char **) 0 ;
  uint32_t *argp3 ;
  uint32_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  arg5 = *(char ***)&_swig_go_4; 
  
  result = (int)CfdGetConfidentialTxInPeginWitness(arg1,(char const *)arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetTxInIssuanceInfo_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, uint32_t *_swig_go_2, _gostring_* _swig_go_3, _gostring_* _swig_go_4, int64_t *_swig_go_5, _gostring_* _swig_go_6, int64_t *_swig_go_7, _gostring_* _swig_go_8, _gostring_* _swig_go_9, _gostring_* _swig_go_10) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32_t arg3 ;
  char **arg4 = (char **) 0 ;
  char **arg5 = (char **) 0 ;
  int64_t *arg6 = (int64_t *) 0 ;
  char **arg7 = (char **) 0 ;
  int64_t *arg8 = (int64_t *) 0 ;
  char **arg9 = (char **) 0 ;
  char **arg10 = (char **) 0 ;
  char **arg11 = (char **) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(char ***)&_swig_go_4; 
  arg6 = *(int64_t **)&_swig_go_5; 
  arg7 = *(char ***)&_swig_go_6; 
  arg8 = *(int64_t **)&_swig_go_7; 
  arg9 = *(char ***)&_swig_go_8; 
  arg10 = *(char ***)&_swig_go_9; 
  arg11 = *(char ***)&_swig_go_10; 
  
  result = (int)CfdGetTxInIssuanceInfo(arg1,(char const *)arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  {
    if (arg7 && *arg7) {
      _swig_go_6->n = strlen(*arg7);
    }
  }
  {
    if (arg9 && *arg9) {
      _swig_go_8->n = strlen(*arg9);
    }
  }
  {
    if (arg10 && *arg10) {
      _swig_go_9->n = strlen(*arg10);
    }
  }
  {
    if (arg11 && *arg11) {
      _swig_go_10->n = strlen(*arg11);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetConfidentialTxOut_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, uint32_t *_swig_go_2, _gostring_* _swig_go_3, int64_t *_swig_go_4, _gostring_* _swig_go_5, _gostring_* _swig_go_6, _gostring_* _swig_go_7, _gostring_* _swig_go_8, _gostring_* _swig_go_9) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32_t arg3 ;
  char **arg4 = (char **) 0 ;
  int64_t *arg5 = (int64_t *) 0 ;
  char **arg6 = (char **) 0 ;
  char **arg7 = (char **) 0 ;
  char **arg8 = (char **) 0 ;
  char **arg9 = (char **) 0 ;
  char **arg10 = (char **) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(int64_t **)&_swig_go_4; 
  arg6 = *(char ***)&_swig_go_5; 
  arg7 = *(char ***)&_swig_go_6; 
  arg8 = *(char ***)&_swig_go_7; 
  arg9 = *(char ***)&_swig_go_8; 
  arg10 = *(char ***)&_swig_go_9; 
  
  result = (int)CfdGetConfidentialTxOut(arg1,(char const *)arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  {
    if (arg6 && *arg6) {
      _swig_go_5->n = strlen(*arg6);
    }
  }
  {
    if (arg7 && *arg7) {
      _swig_go_6->n = strlen(*arg7);
    }
  }
  {
    if (arg8 && *arg8) {
      _swig_go_7->n = strlen(*arg8);
    }
  }
  {
    if (arg9 && *arg9) {
      _swig_go_8->n = strlen(*arg9);
    }
  }
  {
    if (arg10 && *arg10) {
      _swig_go_9->n = strlen(*arg10);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetConfidentialTxInCount_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, uint32_t *_swig_go_2) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32_t *arg3 = (uint32_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(uint32_t **)&_swig_go_2; 
  
  result = (int)CfdGetConfidentialTxInCount(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetConfidentialTxInWitnessCount_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, uint32_t *_swig_go_2, uint32_t *_swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32_t arg3 ;
  uint32_t *arg4 = (uint32_t *) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = *(uint32_t **)&_swig_go_3; 
  
  result = (int)CfdGetConfidentialTxInWitnessCount(arg1,(char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetConfidentialTxInPeginWitnessCount_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, uint32_t *_swig_go_2, uint32_t *_swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32_t arg3 ;
  uint32_t *arg4 = (uint32_t *) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = *(uint32_t **)&_swig_go_3; 
  
  result = (int)CfdGetConfidentialTxInPeginWitnessCount(arg1,(char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetConfidentialTxOutCount_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, uint32_t *_swig_go_2) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32_t *arg3 = (uint32_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(uint32_t **)&_swig_go_2; 
  
  result = (int)CfdGetConfidentialTxOutCount(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetConfidentialTxInIndex_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, uint32_t *_swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  uint32_t *arg5 = (uint32_t *) 0 ;
  uint32_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  arg5 = *(uint32_t **)&_swig_go_4; 
  
  result = (int)CfdGetConfidentialTxInIndex(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdGetConfidentialTxOutIndex_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, uint32_t *_swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32_t *arg5 = (uint32_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(uint32_t **)&_swig_go_4; 
  
  result = (int)CfdGetConfidentialTxOutIndex(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
  _swig_go_result = result; 
  free(arg2); 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdSetRawReissueAsset_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, int64_t *_swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7, _gostring_ _swig_go_8, _gostring_* _swig_go_9, _gostring_* _swig_go_10) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  int64_t arg5 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  char *arg9 = (char *) 0 ;
  char **arg10 = (char **) 0 ;
  char **arg11 = (char **) 0 ;
  uint32_t *argp4 ;
  int64_t *argp5 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  argp5 = (int64_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg5 = (int64_t)*argp5;
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  
  arg9 = (char *)malloc(_swig_go_8.n + 1);
  memcpy(arg9, _swig_go_8.p, _swig_go_8.n);
  arg9[_swig_go_8.n] = '\0';
  
  arg10 = *(char ***)&_swig_go_9; 
  arg11 = *(char ***)&_swig_go_10; 
  
  result = (int)CfdSetRawReissueAsset(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5,(char const *)arg6,(char const *)arg7,(char const *)arg8,(char const *)arg9,arg10,arg11);
  _swig_go_result = result; 
  {
    if (arg10 && *arg10) {
      _swig_go_9->n = strlen(*arg10);
    }
  }
  {
    if (arg11 && *arg11) {
      _swig_go_10->n = strlen(*arg11);
    }
  }
  free(arg2); 
  free(arg3); 
  free(arg6); 
  free(arg7); 
  free(arg8); 
  free(arg9); 
  return _swig_go_result;
}


intgo _wrap_CfdGetIssuanceBlindingKey_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, _gostring_* _swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  char **arg5 = (char **) 0 ;
  uint32_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  arg5 = *(char ***)&_swig_go_4; 
  
  result = (int)CfdGetIssuanceBlindingKey(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5);
  _swig_go_result = result; 
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdGetDefaultBlindingKey_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char **arg4 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdGetDefaultBlindingKey(arg1,(char const *)arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdInitializeBlindTx_cfdgo_455848a691f6477f(void *_swig_go_0, void **_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void **arg2 = (void **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void ***)&_swig_go_1; 
  
  result = (int)CfdInitializeBlindTx(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdSetBlindTxOption_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, int64_t *_swig_go_3) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  int64_t arg4 ;
  int64_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  argp4 = (int64_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg4 = (int64_t)*argp4;
  
  
  result = (int)CfdSetBlindTxOption(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdAddBlindTxInData_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, _gostring_ _swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6, int64_t *_swig_go_7, _gostring_ _swig_go_8, _gostring_ _swig_go_9) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  int64_t arg8 ;
  char *arg9 = (char *) 0 ;
  char *arg10 = (char *) 0 ;
  uint32_t *argp4 ;
  int64_t *argp8 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  argp8 = (int64_t *)_swig_go_7;
  if (argp8 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg8 = (int64_t)*argp8;
  
  
  arg9 = (char *)malloc(_swig_go_8.n + 1);
  memcpy(arg9, _swig_go_8.p, _swig_go_8.n);
  arg9[_swig_go_8.n] = '\0';
  
  
  arg10 = (char *)malloc(_swig_go_9.n + 1);
  memcpy(arg10, _swig_go_9.p, _swig_go_9.n);
  arg10[_swig_go_9.n] = '\0';
  
  
  result = (int)CfdAddBlindTxInData(arg1,arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7,arg8,(char const *)arg9,(char const *)arg10);
  _swig_go_result = result; 
  free(arg3); 
  free(arg5); 
  free(arg6); 
  free(arg7); 
  free(arg9); 
  free(arg10); 
  return _swig_go_result;
}


intgo _wrap_CfdAddBlindTxOutData_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, uint32_t *_swig_go_2, _gostring_ _swig_go_3) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32_t arg3 ;
  char *arg4 = (char *) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (int)CfdAddBlindTxOutData(arg1,arg2,arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdAddBlindTxOutByAddress_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (int)CfdAddBlindTxOutByAddress(arg1,arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdFinalizeBlindTx_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  char **arg4 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdFinalizeBlindTx(arg1,arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdFreeBlindHandle_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)CfdFreeBlindHandle(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdAddConfidentialTxSign_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, bool _swig_go_4, _gostring_ _swig_go_5, bool _swig_go_6, _gostring_* _swig_go_7) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  bool arg5 ;
  char *arg6 = (char *) 0 ;
  bool arg7 ;
  char **arg8 = (char **) 0 ;
  uint32_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  arg5 = (bool)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (bool)_swig_go_6; 
  arg8 = *(char ***)&_swig_go_7; 
  
  result = (int)CfdAddConfidentialTxSign(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5,(char const *)arg6,arg7,arg8);
  _swig_go_result = result; 
  {
    if (arg8 && *arg8) {
      _swig_go_7->n = strlen(*arg8);
    }
  }
  free(arg2); 
  free(arg3); 
  free(arg6); 
  return _swig_go_result;
}


intgo _wrap_CfdAddConfidentialTxDerSign_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, bool _swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6, bool _swig_go_7, bool _swig_go_8, _gostring_* _swig_go_9) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  bool arg5 ;
  char *arg6 = (char *) 0 ;
  int arg7 ;
  bool arg8 ;
  bool arg9 ;
  char **arg10 = (char **) 0 ;
  uint32_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  arg5 = (bool)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (int)_swig_go_6; 
  arg8 = (bool)_swig_go_7; 
  arg9 = (bool)_swig_go_8; 
  arg10 = *(char ***)&_swig_go_9; 
  
  result = (int)CfdAddConfidentialTxDerSign(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5,(char const *)arg6,arg7,arg8,arg9,arg10);
  _swig_go_result = result; 
  {
    if (arg10 && *arg10) {
      _swig_go_9->n = strlen(*arg10);
    }
  }
  free(arg2); 
  free(arg3); 
  free(arg6); 
  return _swig_go_result;
}


intgo _wrap_CfdFinalizeElementsMultisigSign_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, uint32_t *_swig_go_4, intgo _swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7, bool _swig_go_8, _gostring_* _swig_go_9) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  int arg6 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  bool arg9 ;
  char **arg10 = (char **) 0 ;
  uint32_t *argp5 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  argp5 = (uint32_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg5 = (uint32_t)*argp5;
  
  arg6 = (int)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  arg9 = (bool)_swig_go_8; 
  arg10 = *(char ***)&_swig_go_9; 
  
  result = (int)CfdFinalizeElementsMultisigSign(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,arg9,arg10);
  _swig_go_result = result; 
  {
    if (arg10 && *arg10) {
      _swig_go_9->n = strlen(*arg10);
    }
  }
  free(arg3); 
  free(arg4); 
  free(arg7); 
  free(arg8); 
  return _swig_go_result;
}


intgo _wrap_CfdAddConfidentialTxSignWithPrivkeySimple_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6, int64_t *_swig_go_7, _gostring_ _swig_go_8, intgo _swig_go_9, bool _swig_go_10, bool _swig_go_11, _gostring_* _swig_go_12) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  int64_t arg8 ;
  char *arg9 = (char *) 0 ;
  int arg10 ;
  bool arg11 ;
  bool arg12 ;
  char **arg13 = (char **) 0 ;
  uint32_t *argp4 ;
  int64_t *argp8 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  argp8 = (int64_t *)_swig_go_7;
  if (argp8 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg8 = (int64_t)*argp8;
  
  
  arg9 = (char *)malloc(_swig_go_8.n + 1);
  memcpy(arg9, _swig_go_8.p, _swig_go_8.n);
  arg9[_swig_go_8.n] = '\0';
  
  arg10 = (int)_swig_go_9; 
  arg11 = (bool)_swig_go_10; 
  arg12 = (bool)_swig_go_11; 
  arg13 = *(char ***)&_swig_go_12; 
  
  result = (int)CfdAddConfidentialTxSignWithPrivkeySimple(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5,(char const *)arg6,(char const *)arg7,arg8,(char const *)arg9,arg10,arg11,arg12,arg13);
  _swig_go_result = result; 
  {
    if (arg13 && *arg13) {
      _swig_go_12->n = strlen(*arg13);
    }
  }
  free(arg2); 
  free(arg3); 
  free(arg6); 
  free(arg7); 
  free(arg9); 
  return _swig_go_result;
}


intgo _wrap_CfdCreateConfidentialSighash_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6, int64_t *_swig_go_7, _gostring_ _swig_go_8, intgo _swig_go_9, bool _swig_go_10, _gostring_* _swig_go_11) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  int64_t arg8 ;
  char *arg9 = (char *) 0 ;
  int arg10 ;
  bool arg11 ;
  char **arg12 = (char **) 0 ;
  uint32_t *argp4 ;
  int64_t *argp8 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  argp8 = (int64_t *)_swig_go_7;
  if (argp8 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg8 = (int64_t)*argp8;
  
  
  arg9 = (char *)malloc(_swig_go_8.n + 1);
  memcpy(arg9, _swig_go_8.p, _swig_go_8.n);
  arg9[_swig_go_8.n] = '\0';
  
  arg10 = (int)_swig_go_9; 
  arg11 = (bool)_swig_go_10; 
  arg12 = *(char ***)&_swig_go_11; 
  
  result = (int)CfdCreateConfidentialSighash(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5,(char const *)arg6,(char const *)arg7,arg8,(char const *)arg9,arg10,arg11,arg12);
  _swig_go_result = result; 
  {
    if (arg12 && *arg12) {
      _swig_go_11->n = strlen(*arg12);
    }
  }
  free(arg2); 
  free(arg3); 
  free(arg6); 
  free(arg7); 
  free(arg9); 
  return _swig_go_result;
}


intgo _wrap_CfdUnblindTxOut_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, uint32_t *_swig_go_2, _gostring_ _swig_go_3, _gostring_* _swig_go_4, int64_t *_swig_go_5, _gostring_* _swig_go_6, _gostring_* _swig_go_7) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32_t arg3 ;
  char *arg4 = (char *) 0 ;
  char **arg5 = (char **) 0 ;
  int64_t *arg6 = (int64_t *) 0 ;
  char **arg7 = (char **) 0 ;
  char **arg8 = (char **) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(char ***)&_swig_go_4; 
  arg6 = *(int64_t **)&_swig_go_5; 
  arg7 = *(char ***)&_swig_go_6; 
  arg8 = *(char ***)&_swig_go_7; 
  
  result = (int)CfdUnblindTxOut(arg1,(char const *)arg2,arg3,(char const *)arg4,arg5,arg6,arg7,arg8);
  _swig_go_result = result; 
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  {
    if (arg7 && *arg7) {
      _swig_go_6->n = strlen(*arg7);
    }
  }
  {
    if (arg8 && *arg8) {
      _swig_go_7->n = strlen(*arg8);
    }
  }
  free(arg2); 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdUnblindIssuance_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, uint32_t *_swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4, _gostring_* _swig_go_5, int64_t *_swig_go_6, _gostring_* _swig_go_7, _gostring_* _swig_go_8, _gostring_* _swig_go_9, int64_t *_swig_go_10, _gostring_* _swig_go_11, _gostring_* _swig_go_12) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32_t arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char **arg6 = (char **) 0 ;
  int64_t *arg7 = (int64_t *) 0 ;
  char **arg8 = (char **) 0 ;
  char **arg9 = (char **) 0 ;
  char **arg10 = (char **) 0 ;
  int64_t *arg11 = (int64_t *) 0 ;
  char **arg12 = (char **) 0 ;
  char **arg13 = (char **) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = *(char ***)&_swig_go_5; 
  arg7 = *(int64_t **)&_swig_go_6; 
  arg8 = *(char ***)&_swig_go_7; 
  arg9 = *(char ***)&_swig_go_8; 
  arg10 = *(char ***)&_swig_go_9; 
  arg11 = *(int64_t **)&_swig_go_10; 
  arg12 = *(char ***)&_swig_go_11; 
  arg13 = *(char ***)&_swig_go_12; 
  
  result = (int)CfdUnblindIssuance(arg1,(char const *)arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  _swig_go_result = result; 
  {
    if (arg6 && *arg6) {
      _swig_go_5->n = strlen(*arg6);
    }
  }
  {
    if (arg8 && *arg8) {
      _swig_go_7->n = strlen(*arg8);
    }
  }
  {
    if (arg9 && *arg9) {
      _swig_go_8->n = strlen(*arg9);
    }
  }
  {
    if (arg10 && *arg10) {
      _swig_go_9->n = strlen(*arg10);
    }
  }
  {
    if (arg12 && *arg12) {
      _swig_go_11->n = strlen(*arg12);
    }
  }
  {
    if (arg13 && *arg13) {
      _swig_go_12->n = strlen(*arg13);
    }
  }
  free(arg2); 
  free(arg4); 
  free(arg5); 
  return _swig_go_result;
}


intgo _wrap_CfdVerifyConfidentialTxSignature_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4, _gostring_ _swig_go_5, uint32_t *_swig_go_6, intgo _swig_go_7, bool _swig_go_8, int64_t *_swig_go_9, _gostring_ _swig_go_10, intgo _swig_go_11) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  uint32_t arg7 ;
  int arg8 ;
  bool arg9 ;
  int64_t arg10 ;
  char *arg11 = (char *) 0 ;
  int arg12 ;
  uint32_t *argp7 ;
  int64_t *argp10 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  argp7 = (uint32_t *)_swig_go_6;
  if (argp7 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg7 = (uint32_t)*argp7;
  
  arg8 = (int)_swig_go_7; 
  arg9 = (bool)_swig_go_8; 
  
  argp10 = (int64_t *)_swig_go_9;
  if (argp10 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg10 = (int64_t)*argp10;
  
  
  arg11 = (char *)malloc(_swig_go_10.n + 1);
  memcpy(arg11, _swig_go_10.p, _swig_go_10.n);
  arg11[_swig_go_10.n] = '\0';
  
  arg12 = (int)_swig_go_11; 
  
  result = (int)CfdVerifyConfidentialTxSignature(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6,arg7,arg8,arg9,arg10,(char const *)arg11,arg12);
  _swig_go_result = result; 
  free(arg2); 
  free(arg3); 
  free(arg4); 
  free(arg5); 
  free(arg6); 
  free(arg11); 
  return _swig_go_result;
}


intgo _wrap_CfdVerifyConfidentialTxSign_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5, _gostring_ _swig_go_6, int64_t *_swig_go_7, _gostring_ _swig_go_8) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  char *arg5 = (char *) 0 ;
  int arg6 ;
  char *arg7 = (char *) 0 ;
  int64_t arg8 ;
  char *arg9 = (char *) 0 ;
  uint32_t *argp4 ;
  int64_t *argp8 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (int)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  argp8 = (int64_t *)_swig_go_7;
  if (argp8 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg8 = (int64_t)*argp8;
  
  
  arg9 = (char *)malloc(_swig_go_8.n + 1);
  memcpy(arg9, _swig_go_8.p, _swig_go_8.n);
  arg9[_swig_go_8.n] = '\0';
  
  
  result = (int)CfdVerifyConfidentialTxSign(arg1,(char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,arg6,(char const *)arg7,arg8,(char const *)arg9);
  _swig_go_result = result; 
  free(arg2); 
  free(arg3); 
  free(arg5); 
  free(arg7); 
  free(arg9); 
  return _swig_go_result;
}


intgo _wrap_CfdGetConfidentialValueHex_cfdgo_455848a691f6477f(void *_swig_go_0, int64_t *_swig_go_1, bool _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  int64_t arg2 ;
  bool arg3 ;
  char **arg4 = (char **) 0 ;
  int64_t *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  arg3 = (bool)_swig_go_2; 
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdGetConfidentialValueHex(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  return _swig_go_result;
}


intgo _wrap_kCfdExtPrivkey_cfdgo_455848a691f6477f() {
  CfdExtKeyType result;
  intgo _swig_go_result;
  
  
  result = kCfdExtPrivkey;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdExtPubkey_cfdgo_455848a691f6477f() {
  CfdExtKeyType result;
  intgo _swig_go_result;
  
  
  result = kCfdExtPubkey;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CfdCalculateEcSignature_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, intgo _swig_go_4, bool _swig_go_5, _gostring_* _swig_go_6) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int arg5 ;
  bool arg6 ;
  char **arg7 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = (int)_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  arg7 = *(char ***)&_swig_go_6; 
  
  result = (int)CfdCalculateEcSignature(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  {
    if (arg7 && *arg7) {
      _swig_go_6->n = strlen(*arg7);
    }
  }
  free(arg2); 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdVerifyEcSignature_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (int)CfdVerifyEcSignature(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg2); 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdCalculateSchnorrSignature_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, _gostring_* _swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char **arg5 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(char ***)&_swig_go_4; 
  
  result = (int)CfdCalculateSchnorrSignature(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
  _swig_go_result = result; 
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  free(arg2); 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdCalculateSchnorrSignatureWithNonce_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, _gostring_* _swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char **arg5 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(char ***)&_swig_go_4; 
  
  result = (int)CfdCalculateSchnorrSignatureWithNonce(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
  _swig_go_result = result; 
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  free(arg2); 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdVerifySchnorrSignature_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (int)CfdVerifySchnorrSignature(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg2); 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdVerifySchnorrSignatureWithNonce_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = (int)CfdVerifySchnorrSignatureWithNonce(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  _swig_go_result = result; 
  free(arg2); 
  free(arg3); 
  free(arg4); 
  free(arg5); 
  return _swig_go_result;
}


intgo _wrap_CfdEncodeSignatureByDer_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, bool _swig_go_3, _gostring_* _swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool arg4 ;
  char **arg5 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  arg5 = *(char ***)&_swig_go_4; 
  
  result = (int)CfdEncodeSignatureByDer(arg1,(char const *)arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdDecodeSignatureFromDer_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_* _swig_go_2, intgo *_swig_go_3, bool *_swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int *arg4 = (int *) 0 ;
  bool *arg5 = (bool *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(char ***)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  arg5 = *(bool **)&_swig_go_4; 
  
  result = (int)CfdDecodeSignatureFromDer(arg1,(char const *)arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  {
    if (arg3 && *arg3) {
      _swig_go_2->n = strlen(*arg3);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdNormalizeSignature_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_* _swig_go_2) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(char ***)&_swig_go_2; 
  
  result = (int)CfdNormalizeSignature(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  {
    if (arg3 && *arg3) {
      _swig_go_2->n = strlen(*arg3);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdCreateKeyPair_cfdgo_455848a691f6477f(void *_swig_go_0, bool _swig_go_1, intgo _swig_go_2, _gostring_* _swig_go_3, _gostring_* _swig_go_4, _gostring_* _swig_go_5) {
  void *arg1 = (void *) 0 ;
  bool arg2 ;
  int arg3 ;
  char **arg4 = (char **) 0 ;
  char **arg5 = (char **) 0 ;
  char **arg6 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(char ***)&_swig_go_4; 
  arg6 = *(char ***)&_swig_go_5; 
  
  result = (int)CfdCreateKeyPair(arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  {
    if (arg6 && *arg6) {
      _swig_go_5->n = strlen(*arg6);
    }
  }
  return _swig_go_result;
}


intgo _wrap_CfdGetPrivkeyFromWif_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char **arg4 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdGetPrivkeyFromWif(arg1,(char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetPrivkeyWif_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, bool _swig_go_3, _gostring_* _swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool arg4 ;
  char **arg5 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  arg5 = *(char ***)&_swig_go_4; 
  
  result = (int)CfdGetPrivkeyWif(arg1,(char const *)arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdParsePrivkeyWif_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_* _swig_go_2, intgo *_swig_go_3, bool *_swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int *arg4 = (int *) 0 ;
  bool *arg5 = (bool *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(char ***)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  arg5 = *(bool **)&_swig_go_4; 
  
  result = (int)CfdParsePrivkeyWif(arg1,(char const *)arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  {
    if (arg3 && *arg3) {
      _swig_go_2->n = strlen(*arg3);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetPubkeyFromPrivkey_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, bool _swig_go_3, _gostring_* _swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  bool arg4 ;
  char **arg5 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (bool)_swig_go_3; 
  arg5 = *(char ***)&_swig_go_4; 
  
  result = (int)CfdGetPubkeyFromPrivkey(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5);
  _swig_go_result = result; 
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdCompressPubkey_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_* _swig_go_2) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(char ***)&_swig_go_2; 
  
  result = (int)CfdCompressPubkey(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  {
    if (arg3 && *arg3) {
      _swig_go_2->n = strlen(*arg3);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdUncompressPubkey_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_* _swig_go_2) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(char ***)&_swig_go_2; 
  
  result = (int)CfdUncompressPubkey(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  {
    if (arg3 && *arg3) {
      _swig_go_2->n = strlen(*arg3);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdInitializeCombinePubkey_cfdgo_455848a691f6477f(void *_swig_go_0, void **_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void **arg2 = (void **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void ***)&_swig_go_1; 
  
  result = (int)CfdInitializeCombinePubkey(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdAddCombinePubkey_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (int)CfdAddCombinePubkey(arg1,arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdFinalizeCombinePubkey_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_* _swig_go_2) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char **arg3 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(char ***)&_swig_go_2; 
  
  result = (int)CfdFinalizeCombinePubkey(arg1,arg2,arg3);
  _swig_go_result = result; 
  {
    if (arg3 && *arg3) {
      _swig_go_2->n = strlen(*arg3);
    }
  }
  return _swig_go_result;
}


intgo _wrap_CfdFreeCombinePubkeyHandle_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)CfdFreeCombinePubkeyHandle(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdPubkeyTweakAdd_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char **arg4 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdPubkeyTweakAdd(arg1,(char const *)arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdPubkeyTweakMul_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char **arg4 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdPubkeyTweakMul(arg1,(char const *)arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdNegatePubkey_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_* _swig_go_2) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(char ***)&_swig_go_2; 
  
  result = (int)CfdNegatePubkey(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  {
    if (arg3 && *arg3) {
      _swig_go_2->n = strlen(*arg3);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdPrivkeyTweakAdd_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char **arg4 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdPrivkeyTweakAdd(arg1,(char const *)arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdPrivkeyTweakMul_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char **arg4 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdPrivkeyTweakMul(arg1,(char const *)arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdNegatePrivkey_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_* _swig_go_2) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(char ***)&_swig_go_2; 
  
  result = (int)CfdNegatePrivkey(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  {
    if (arg3 && *arg3) {
      _swig_go_2->n = strlen(*arg3);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetSchnorrPubkey_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, _gostring_* _swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char **arg5 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(char ***)&_swig_go_4; 
  
  result = (int)CfdGetSchnorrPubkey(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
  _swig_go_result = result; 
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  free(arg2); 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdGetSchnorrPublicNonce_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_* _swig_go_2) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(char ***)&_swig_go_2; 
  
  result = (int)CfdGetSchnorrPublicNonce(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  {
    if (arg3 && *arg3) {
      _swig_go_2->n = strlen(*arg3);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdCreateExtkeyFromSeed_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_* _swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int arg4 ;
  char **arg5 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(char ***)&_swig_go_4; 
  
  result = (int)CfdCreateExtkeyFromSeed(arg1,(char const *)arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdCreateExtkey_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6, char _swig_go_7, uint32_t *_swig_go_8, _gostring_* _swig_go_9) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  unsigned char arg8 ;
  uint32_t arg9 ;
  char **arg10 = (char **) 0 ;
  uint32_t *argp9 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  arg8 = (unsigned char)_swig_go_7; 
  
  argp9 = (uint32_t *)_swig_go_8;
  if (argp9 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg9 = (uint32_t)*argp9;
  
  arg10 = *(char ***)&_swig_go_9; 
  
  result = (int)CfdCreateExtkey(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7,arg8,arg9,arg10);
  _swig_go_result = result; 
  {
    if (arg10 && *arg10) {
      _swig_go_9->n = strlen(*arg10);
    }
  }
  free(arg4); 
  free(arg5); 
  free(arg6); 
  free(arg7); 
  return _swig_go_result;
}


intgo _wrap_CfdCreateExtkeyFromParent_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, uint32_t *_swig_go_2, bool _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, _gostring_* _swig_go_6) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32_t arg3 ;
  bool arg4 ;
  int arg5 ;
  int arg6 ;
  char **arg7 = (char **) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = (bool)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(char ***)&_swig_go_6; 
  
  result = (int)CfdCreateExtkeyFromParent(arg1,(char const *)arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  {
    if (arg7 && *arg7) {
      _swig_go_6->n = strlen(*arg7);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdCreateExtkeyFromParentPath_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_* _swig_go_5) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  int arg5 ;
  char **arg6 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = *(char ***)&_swig_go_5; 
  
  result = (int)CfdCreateExtkeyFromParentPath(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  {
    if (arg6 && *arg6) {
      _swig_go_5->n = strlen(*arg6);
    }
  }
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdCreateExtPubkey_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char **arg4 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdCreateExtPubkey(arg1,(char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetPrivkeyFromExtkey_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _gostring_* _swig_go_3, _gostring_* _swig_go_4) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char **arg4 = (char **) 0 ;
  char **arg5 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(char ***)&_swig_go_4; 
  
  result = (int)CfdGetPrivkeyFromExtkey(arg1,(char const *)arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetPubkeyFromExtkey_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char **arg4 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdGetPubkeyFromExtkey(arg1,(char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetParentExtkeyPathData_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3, _gostring_* _swig_go_4, _gostring_* _swig_go_5) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  char **arg5 = (char **) 0 ;
  char **arg6 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (int)_swig_go_3; 
  arg5 = *(char ***)&_swig_go_4; 
  arg6 = *(char ***)&_swig_go_5; 
  
  result = (int)CfdGetParentExtkeyPathData(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  {
    if (arg6 && *arg6) {
      _swig_go_5->n = strlen(*arg6);
    }
  }
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdGetExtkeyInformation_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_* _swig_go_2, _gostring_* _swig_go_3, _gostring_* _swig_go_4, uint32_t *_swig_go_5, uint32_t *_swig_go_6) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  char **arg4 = (char **) 0 ;
  char **arg5 = (char **) 0 ;
  uint32_t *arg6 = (uint32_t *) 0 ;
  uint32_t *arg7 = (uint32_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(char ***)&_swig_go_2; 
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(char ***)&_swig_go_4; 
  arg6 = *(uint32_t **)&_swig_go_5; 
  arg7 = *(uint32_t **)&_swig_go_6; 
  
  result = (int)CfdGetExtkeyInformation(arg1,(char const *)arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  {
    if (arg3 && *arg3) {
      _swig_go_2->n = strlen(*arg3);
    }
  }
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdInitializeMnemonicWordList_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, void **_swig_go_2, uint32_t *_swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  void **arg3 = (void **) 0 ;
  uint32_t *arg4 = (uint32_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(void ***)&_swig_go_2; 
  arg4 = *(uint32_t **)&_swig_go_3; 
  
  result = (int)CfdInitializeMnemonicWordList(arg1,(char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetMnemonicWord_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, uint32_t *_swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32_t arg3 ;
  char **arg4 = (char **) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdGetMnemonicWord(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  return _swig_go_result;
}


intgo _wrap_CfdFreeMnemonicWordList_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)CfdFreeMnemonicWordList(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdConvertMnemonicToSeed_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, bool _swig_go_3, _gostring_ _swig_go_4, bool _swig_go_5, _gostring_* _swig_go_6, _gostring_* _swig_go_7) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  bool arg4 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  char **arg7 = (char **) 0 ;
  char **arg8 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (bool)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (bool)_swig_go_5; 
  arg7 = *(char ***)&_swig_go_6; 
  arg8 = *(char ***)&_swig_go_7; 
  
  result = (int)CfdConvertMnemonicToSeed(arg1,(char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,arg6,arg7,arg8);
  _swig_go_result = result; 
  {
    if (arg7 && *arg7) {
      _swig_go_6->n = strlen(*arg7);
    }
  }
  {
    if (arg8 && *arg8) {
      _swig_go_7->n = strlen(*arg8);
    }
  }
  free(arg2); 
  free(arg3); 
  free(arg5); 
  return _swig_go_result;
}


intgo _wrap_CfdConvertEntropyToMnemonic_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char **arg4 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdConvertEntropyToMnemonic(arg1,(char const *)arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdInitializeTxSerializeForLedger_cfdgo_455848a691f6477f(void *_swig_go_0, void **_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void **arg2 = (void **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void ***)&_swig_go_1; 
  
  result = (int)CfdInitializeTxSerializeForLedger(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdAddTxOutMetaDataForLedger_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, uint32_t *_swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4, _gostring_ _swig_go_5) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32_t arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (int)CfdAddTxOutMetaDataForLedger(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg4); 
  free(arg5); 
  free(arg6); 
  return _swig_go_result;
}


intgo _wrap_CfdFinalizeTxSerializeForLedger_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, bool _swig_go_4, bool _swig_go_5, _gostring_* _swig_go_6) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  bool arg5 ;
  bool arg6 ;
  char **arg7 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = (bool)_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  arg7 = *(char ***)&_swig_go_6; 
  
  result = (int)CfdFinalizeTxSerializeForLedger(arg1,arg2,arg3,(char const *)arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  {
    if (arg7 && *arg7) {
      _swig_go_6->n = strlen(*arg7);
    }
  }
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdFinalizeTxSerializeHashForLedger_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, bool _swig_go_4, bool _swig_go_5, bool _swig_go_6, _gostring_* _swig_go_7) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  bool arg5 ;
  bool arg6 ;
  bool arg7 ;
  char **arg8 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = (bool)_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  arg7 = (bool)_swig_go_6; 
  arg8 = *(char ***)&_swig_go_7; 
  
  result = (int)CfdFinalizeTxSerializeHashForLedger(arg1,arg2,arg3,(char const *)arg4,arg5,arg6,arg7,arg8);
  _swig_go_result = result; 
  {
    if (arg8 && *arg8) {
      _swig_go_7->n = strlen(*arg8);
    }
  }
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdFreeTxSerializeForLedger_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)CfdFreeTxSerializeForLedger(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdParseScript_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, void **_swig_go_2, uint32_t *_swig_go_3) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  void **arg3 = (void **) 0 ;
  uint32_t *arg4 = (uint32_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(void ***)&_swig_go_2; 
  arg4 = *(uint32_t **)&_swig_go_3; 
  
  result = (int)CfdParseScript(arg1,(char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdGetScriptItem_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, uint32_t *_swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32_t arg3 ;
  char **arg4 = (char **) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdGetScriptItem(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  return _swig_go_result;
}


intgo _wrap_CfdFreeScriptItemHandle_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)CfdFreeScriptItemHandle(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdConvertScriptAsmToHex_cfdgo_455848a691f6477f(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_* _swig_go_2) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(char ***)&_swig_go_2; 
  
  result = (int)CfdConvertScriptAsmToHex(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  {
    if (arg3 && *arg3) {
      _swig_go_2->n = strlen(*arg3);
    }
  }
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_CfdInitializeMultisigScriptSig_cfdgo_455848a691f6477f(void *_swig_go_0, void **_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void **arg2 = (void **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void ***)&_swig_go_1; 
  
  result = (int)CfdInitializeMultisigScriptSig(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdAddMultisigScriptSigData_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (int)CfdAddMultisigScriptSigData(arg1,arg2,(char const *)arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdAddMultisigScriptSigDataToDer_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3, bool _swig_go_4, _gostring_ _swig_go_5) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  bool arg5 ;
  char *arg6 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (int)CfdAddMultisigScriptSigDataToDer(arg1,arg2,(char const *)arg3,arg4,arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg3); 
  free(arg6); 
  return _swig_go_result;
}


intgo _wrap_CfdFinalizeMultisigScriptSig_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  char **arg4 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdFinalizeMultisigScriptSig(arg1,arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdFreeMultisigScriptSigHandle_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)CfdFreeMultisigScriptSigHandle(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_kCfdSequenceLockTimeDisable_cfdgo_455848a691f6477f() {
  CfdSequenceLockTime result;
  intgo _swig_go_result;
  
  
  result = kCfdSequenceLockTimeDisable;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdSequenceLockTimeEnableMax_cfdgo_455848a691f6477f() {
  CfdSequenceLockTime result;
  intgo _swig_go_result;
  
  
  result = kCfdSequenceLockTimeEnableMax;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdFundTxIsBlind_cfdgo_455848a691f6477f() {
  CfdFundTxOption result;
  intgo _swig_go_result;
  
  
  result = kCfdFundTxIsBlind;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdFundTxDustFeeRate_cfdgo_455848a691f6477f() {
  CfdFundTxOption result;
  intgo _swig_go_result;
  
  
  result = kCfdFundTxDustFeeRate;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdFundTxLongTermFeeRate_cfdgo_455848a691f6477f() {
  CfdFundTxOption result;
  intgo _swig_go_result;
  
  
  result = kCfdFundTxLongTermFeeRate;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdFundTxKnapsackMinChange_cfdgo_455848a691f6477f() {
  CfdFundTxOption result;
  intgo _swig_go_result;
  
  
  result = kCfdFundTxKnapsackMinChange;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdFundTxBlindExponent_cfdgo_455848a691f6477f() {
  CfdFundTxOption result;
  intgo _swig_go_result;
  
  
  result = kCfdFundTxBlindExponent;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kCfdFundTxBlindMinimumBits_cfdgo_455848a691f6477f() {
  CfdFundTxOption result;
  intgo _swig_go_result;
  
  
  result = kCfdFundTxBlindMinimumBits;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CfdInitializeTransaction_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, uint32_t *_swig_go_2, uint32_t *_swig_go_3, _gostring_ _swig_go_4, void **_swig_go_5) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  char *arg5 = (char *) 0 ;
  void **arg6 = (void **) 0 ;
  uint32_t *argp3 ;
  uint32_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = *(void ***)&_swig_go_5; 
  
  result = (int)CfdInitializeTransaction(arg1,arg2,arg3,arg4,(char const *)arg5,arg6);
  _swig_go_result = result; 
  free(arg5); 
  return _swig_go_result;
}


intgo _wrap_CfdAddTransactionInput_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, uint32_t *_swig_go_4) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  uint32_t arg5 ;
  uint32_t *argp4 ;
  uint32_t *argp5 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  argp5 = (uint32_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg5 = (uint32_t)*argp5;
  
  
  result = (int)CfdAddTransactionInput(arg1,arg2,(char const *)arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdAddTransactionOutput_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, int64_t *_swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4, _gostring_ _swig_go_5) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int64_t arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  int64_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (int64_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg3 = (int64_t)*argp3;
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (int)CfdAddTransactionOutput(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg4); 
  free(arg5); 
  free(arg6); 
  return _swig_go_result;
}


intgo _wrap_CfdFinalizeTransaction_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_* _swig_go_2) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char **arg3 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(char ***)&_swig_go_2; 
  
  result = (int)CfdFinalizeTransaction(arg1,arg2,arg3);
  _swig_go_result = result; 
  {
    if (arg3 && *arg3) {
      _swig_go_2->n = strlen(*arg3);
    }
  }
  return _swig_go_result;
}


intgo _wrap_CfdFreeTransactionHandle_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)CfdFreeTransactionHandle(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdAddTxSign_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, uint32_t *_swig_go_4, intgo _swig_go_5, _gostring_ _swig_go_6, bool _swig_go_7, intgo _swig_go_8, bool _swig_go_9, bool _swig_go_10, _gostring_* _swig_go_11) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  int arg6 ;
  char *arg7 = (char *) 0 ;
  bool arg8 ;
  int arg9 ;
  bool arg10 ;
  bool arg11 ;
  char **arg12 = (char **) 0 ;
  uint32_t *argp5 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  argp5 = (uint32_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg5 = (uint32_t)*argp5;
  
  arg6 = (int)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  arg8 = (bool)_swig_go_7; 
  arg9 = (int)_swig_go_8; 
  arg10 = (bool)_swig_go_9; 
  arg11 = (bool)_swig_go_10; 
  arg12 = *(char ***)&_swig_go_11; 
  
  result = (int)CfdAddTxSign(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,(char const *)arg7,arg8,arg9,arg10,arg11,arg12);
  _swig_go_result = result; 
  {
    if (arg12 && *arg12) {
      _swig_go_11->n = strlen(*arg12);
    }
  }
  free(arg3); 
  free(arg4); 
  free(arg7); 
  return _swig_go_result;
}


intgo _wrap_CfdAddPubkeyHashSign_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, uint32_t *_swig_go_4, intgo _swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7, bool _swig_go_8, intgo _swig_go_9, bool _swig_go_10, _gostring_* _swig_go_11) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  int arg6 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  bool arg9 ;
  int arg10 ;
  bool arg11 ;
  char **arg12 = (char **) 0 ;
  uint32_t *argp5 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  argp5 = (uint32_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg5 = (uint32_t)*argp5;
  
  arg6 = (int)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  arg9 = (bool)_swig_go_8; 
  arg10 = (int)_swig_go_9; 
  arg11 = (bool)_swig_go_10; 
  arg12 = *(char ***)&_swig_go_11; 
  
  result = (int)CfdAddPubkeyHashSign(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,arg9,arg10,arg11,arg12);
  _swig_go_result = result; 
  {
    if (arg12 && *arg12) {
      _swig_go_11->n = strlen(*arg12);
    }
  }
  free(arg3); 
  free(arg4); 
  free(arg7); 
  free(arg8); 
  return _swig_go_result;
}


intgo _wrap_CfdAddScriptHashSign_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, uint32_t *_swig_go_4, intgo _swig_go_5, _gostring_ _swig_go_6, bool _swig_go_7, _gostring_* _swig_go_8) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  int arg6 ;
  char *arg7 = (char *) 0 ;
  bool arg8 ;
  char **arg9 = (char **) 0 ;
  uint32_t *argp5 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  argp5 = (uint32_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg5 = (uint32_t)*argp5;
  
  arg6 = (int)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  arg8 = (bool)_swig_go_7; 
  arg9 = *(char ***)&_swig_go_8; 
  
  result = (int)CfdAddScriptHashSign(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,(char const *)arg7,arg8,arg9);
  _swig_go_result = result; 
  {
    if (arg9 && *arg9) {
      _swig_go_8->n = strlen(*arg9);
    }
  }
  free(arg3); 
  free(arg4); 
  free(arg7); 
  return _swig_go_result;
}


intgo _wrap_CfdAddSignWithPrivkeySimple_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, uint32_t *_swig_go_4, intgo _swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7, int64_t *_swig_go_8, intgo _swig_go_9, bool _swig_go_10, bool _swig_go_11, _gostring_* _swig_go_12) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  int arg6 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  int64_t arg9 ;
  int arg10 ;
  bool arg11 ;
  bool arg12 ;
  char **arg13 = (char **) 0 ;
  uint32_t *argp5 ;
  int64_t *argp9 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  argp5 = (uint32_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg5 = (uint32_t)*argp5;
  
  arg6 = (int)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  
  argp9 = (int64_t *)_swig_go_8;
  if (argp9 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg9 = (int64_t)*argp9;
  
  arg10 = (int)_swig_go_9; 
  arg11 = (bool)_swig_go_10; 
  arg12 = (bool)_swig_go_11; 
  arg13 = *(char ***)&_swig_go_12; 
  
  result = (int)CfdAddSignWithPrivkeySimple(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,arg9,arg10,arg11,arg12,arg13);
  _swig_go_result = result; 
  {
    if (arg13 && *arg13) {
      _swig_go_12->n = strlen(*arg13);
    }
  }
  free(arg3); 
  free(arg4); 
  free(arg7); 
  free(arg8); 
  return _swig_go_result;
}


intgo _wrap_CfdInitializeMultisigSign_cfdgo_455848a691f6477f(void *_swig_go_0, void **_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void **arg2 = (void **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void ***)&_swig_go_1; 
  
  result = (int)CfdInitializeMultisigSign(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdAddMultisigSignData_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (int)CfdAddMultisigSignData(arg1,arg2,(char const *)arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdAddMultisigSignDataToDer_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3, bool _swig_go_4, _gostring_ _swig_go_5) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  bool arg5 ;
  char *arg6 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (int)CfdAddMultisigSignDataToDer(arg1,arg2,(char const *)arg3,arg4,arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg3); 
  free(arg6); 
  return _swig_go_result;
}


intgo _wrap_CfdFinalizeMultisigSign_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4, uint32_t *_swig_go_5, intgo _swig_go_6, _gostring_ _swig_go_7, _gostring_* _swig_go_8) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  uint32_t arg6 ;
  int arg7 ;
  char *arg8 = (char *) 0 ;
  char **arg9 = (char **) 0 ;
  uint32_t *argp6 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  argp6 = (uint32_t *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg6 = (uint32_t)*argp6;
  
  arg7 = (int)_swig_go_6; 
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  arg9 = *(char ***)&_swig_go_8; 
  
  result = (int)CfdFinalizeMultisigSign(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,(char const *)arg8,arg9);
  _swig_go_result = result; 
  {
    if (arg9 && *arg9) {
      _swig_go_8->n = strlen(*arg9);
    }
  }
  free(arg4); 
  free(arg5); 
  free(arg8); 
  return _swig_go_result;
}


intgo _wrap_CfdFreeMultisigSignHandle_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)CfdFreeMultisigSignHandle(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdVerifySignature_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7, uint32_t *_swig_go_8, intgo _swig_go_9, bool _swig_go_10, int64_t *_swig_go_11, _gostring_ _swig_go_12) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  uint32_t arg9 ;
  int arg10 ;
  bool arg11 ;
  int64_t arg12 ;
  char *arg13 = (char *) 0 ;
  uint32_t *argp9 ;
  int64_t *argp12 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  
  argp9 = (uint32_t *)_swig_go_8;
  if (argp9 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg9 = (uint32_t)*argp9;
  
  arg10 = (int)_swig_go_9; 
  arg11 = (bool)_swig_go_10; 
  
  argp12 = (int64_t *)_swig_go_11;
  if (argp12 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg12 = (int64_t)*argp12;
  
  
  arg13 = (char *)malloc(_swig_go_12.n + 1);
  memcpy(arg13, _swig_go_12.p, _swig_go_12.n);
  arg13[_swig_go_12.n] = '\0';
  
  
  result = (int)CfdVerifySignature(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,(char const *)arg6,(char const *)arg7,(char const *)arg8,arg9,arg10,arg11,arg12,(char const *)arg13);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  free(arg6); 
  free(arg7); 
  free(arg8); 
  free(arg13); 
  return _swig_go_result;
}


intgo _wrap_CfdVerifyTxSign_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, uint32_t *_swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6, _gostring_ _swig_go_7, int64_t *_swig_go_8, _gostring_ _swig_go_9) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  char *arg6 = (char *) 0 ;
  int arg7 ;
  char *arg8 = (char *) 0 ;
  int64_t arg9 ;
  char *arg10 = (char *) 0 ;
  uint32_t *argp5 ;
  int64_t *argp9 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  argp5 = (uint32_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg5 = (uint32_t)*argp5;
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (int)_swig_go_6; 
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  
  argp9 = (int64_t *)_swig_go_8;
  if (argp9 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg9 = (int64_t)*argp9;
  
  
  arg10 = (char *)malloc(_swig_go_9.n + 1);
  memcpy(arg10, _swig_go_9.p, _swig_go_9.n);
  arg10[_swig_go_9.n] = '\0';
  
  
  result = (int)CfdVerifyTxSign(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,(char const *)arg6,arg7,(char const *)arg8,arg9,(char const *)arg10);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  free(arg6); 
  free(arg8); 
  free(arg10); 
  return _swig_go_result;
}


intgo _wrap_CfdCreateSighash_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, uint32_t *_swig_go_4, intgo _swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7, int64_t *_swig_go_8, intgo _swig_go_9, bool _swig_go_10, _gostring_* _swig_go_11) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  int arg6 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  int64_t arg9 ;
  int arg10 ;
  bool arg11 ;
  char **arg12 = (char **) 0 ;
  uint32_t *argp5 ;
  int64_t *argp9 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  argp5 = (uint32_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg5 = (uint32_t)*argp5;
  
  arg6 = (int)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  
  argp9 = (int64_t *)_swig_go_8;
  if (argp9 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg9 = (int64_t)*argp9;
  
  arg10 = (int)_swig_go_9; 
  arg11 = (bool)_swig_go_10; 
  arg12 = *(char ***)&_swig_go_11; 
  
  result = (int)CfdCreateSighash(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,arg9,arg10,arg11,arg12);
  _swig_go_result = result; 
  {
    if (arg12 && *arg12) {
      _swig_go_11->n = strlen(*arg12);
    }
  }
  free(arg3); 
  free(arg4); 
  free(arg7); 
  free(arg8); 
  return _swig_go_result;
}


intgo _wrap_CfdGetTxInfo_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_* _swig_go_3, _gostring_* _swig_go_4, uint32_t *_swig_go_5, uint32_t *_swig_go_6, uint32_t *_swig_go_7, uint32_t *_swig_go_8, uint32_t *_swig_go_9) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char **arg4 = (char **) 0 ;
  char **arg5 = (char **) 0 ;
  uint32_t *arg6 = (uint32_t *) 0 ;
  uint32_t *arg7 = (uint32_t *) 0 ;
  uint32_t *arg8 = (uint32_t *) 0 ;
  uint32_t *arg9 = (uint32_t *) 0 ;
  uint32_t *arg10 = (uint32_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(char ***)&_swig_go_4; 
  arg6 = *(uint32_t **)&_swig_go_5; 
  arg7 = *(uint32_t **)&_swig_go_6; 
  arg8 = *(uint32_t **)&_swig_go_7; 
  arg9 = *(uint32_t **)&_swig_go_8; 
  arg10 = *(uint32_t **)&_swig_go_9; 
  
  result = (int)CfdGetTxInfo(arg1,arg2,(char const *)arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdGetTxIn_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, _gostring_* _swig_go_4, uint32_t *_swig_go_5, uint32_t *_swig_go_6, _gostring_* _swig_go_7) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  char **arg5 = (char **) 0 ;
  uint32_t *arg6 = (uint32_t *) 0 ;
  uint32_t *arg7 = (uint32_t *) 0 ;
  char **arg8 = (char **) 0 ;
  uint32_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  arg5 = *(char ***)&_swig_go_4; 
  arg6 = *(uint32_t **)&_swig_go_5; 
  arg7 = *(uint32_t **)&_swig_go_6; 
  arg8 = *(char ***)&_swig_go_7; 
  
  result = (int)CfdGetTxIn(arg1,arg2,(char const *)arg3,arg4,arg5,arg6,arg7,arg8);
  _swig_go_result = result; 
  {
    if (arg5 && *arg5) {
      _swig_go_4->n = strlen(*arg5);
    }
  }
  {
    if (arg8 && *arg8) {
      _swig_go_7->n = strlen(*arg8);
    }
  }
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdGetTxInWitness_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, uint32_t *_swig_go_4, _gostring_* _swig_go_5) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  uint32_t arg5 ;
  char **arg6 = (char **) 0 ;
  uint32_t *argp4 ;
  uint32_t *argp5 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  argp5 = (uint32_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg5 = (uint32_t)*argp5;
  
  arg6 = *(char ***)&_swig_go_5; 
  
  result = (int)CfdGetTxInWitness(arg1,arg2,(char const *)arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  {
    if (arg6 && *arg6) {
      _swig_go_5->n = strlen(*arg6);
    }
  }
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdGetTxOut_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, int64_t *_swig_go_4, _gostring_* _swig_go_5) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  int64_t *arg5 = (int64_t *) 0 ;
  char **arg6 = (char **) 0 ;
  uint32_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  arg5 = *(int64_t **)&_swig_go_4; 
  arg6 = *(char ***)&_swig_go_5; 
  
  result = (int)CfdGetTxOut(arg1,arg2,(char const *)arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  {
    if (arg6 && *arg6) {
      _swig_go_5->n = strlen(*arg6);
    }
  }
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdGetTxInCount_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  uint32_t *arg4 = (uint32_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(uint32_t **)&_swig_go_3; 
  
  result = (int)CfdGetTxInCount(arg1,arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdGetTxInWitnessCount_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, uint32_t *_swig_go_4) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  uint32_t *arg5 = (uint32_t *) 0 ;
  uint32_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  arg5 = *(uint32_t **)&_swig_go_4; 
  
  result = (int)CfdGetTxInWitnessCount(arg1,arg2,(char const *)arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdGetTxOutCount_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  uint32_t *arg4 = (uint32_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(uint32_t **)&_swig_go_3; 
  
  result = (int)CfdGetTxOutCount(arg1,arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdGetTxInIndex_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, uint32_t *_swig_go_4, uint32_t *_swig_go_5) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  uint32_t *arg6 = (uint32_t *) 0 ;
  uint32_t *argp5 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  argp5 = (uint32_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg5 = (uint32_t)*argp5;
  
  arg6 = *(uint32_t **)&_swig_go_5; 
  
  result = (int)CfdGetTxInIndex(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdGetTxOutIndex_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4, uint32_t *_swig_go_5) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  uint32_t *arg6 = (uint32_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = *(uint32_t **)&_swig_go_5; 
  
  result = (int)CfdGetTxOutIndex(arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,arg6);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  free(arg5); 
  return _swig_go_result;
}


intgo _wrap_CfdInitializeFundRawTx_cfdgo_455848a691f6477f(void *_swig_go_0, intgo _swig_go_1, uint32_t *_swig_go_2, _gostring_ _swig_go_3, void **_swig_go_4) {
  void *arg1 = (void *) 0 ;
  int arg2 ;
  uint32_t arg3 ;
  char *arg4 = (char *) 0 ;
  void **arg5 = (void **) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(void ***)&_swig_go_4; 
  
  result = (int)CfdInitializeFundRawTx(arg1,arg2,arg3,(char const *)arg4,arg5);
  _swig_go_result = result; 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_CfdAddTxInForFundRawTx_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, int64_t *_swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6, bool _swig_go_7, bool _swig_go_8, bool _swig_go_9, uint32_t *_swig_go_10, _gostring_ _swig_go_11) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  int64_t arg5 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  bool arg8 ;
  bool arg9 ;
  bool arg10 ;
  uint32_t arg11 ;
  char *arg12 = (char *) 0 ;
  uint32_t *argp4 ;
  int64_t *argp5 ;
  uint32_t *argp11 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  argp5 = (int64_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg5 = (int64_t)*argp5;
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  arg8 = (bool)_swig_go_7; 
  arg9 = (bool)_swig_go_8; 
  arg10 = (bool)_swig_go_9; 
  
  argp11 = (uint32_t *)_swig_go_10;
  if (argp11 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg11 = (uint32_t)*argp11;
  
  
  arg12 = (char *)malloc(_swig_go_11.n + 1);
  memcpy(arg12, _swig_go_11.p, _swig_go_11.n);
  arg12[_swig_go_11.n] = '\0';
  
  
  result = (int)CfdAddTxInForFundRawTx(arg1,arg2,(char const *)arg3,arg4,arg5,(char const *)arg6,(char const *)arg7,arg8,arg9,arg10,arg11,(char const *)arg12);
  _swig_go_result = result; 
  free(arg3); 
  free(arg6); 
  free(arg7); 
  free(arg12); 
  return _swig_go_result;
}


intgo _wrap_CfdAddTxInTemplateForFundRawTx_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, int64_t *_swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6, bool _swig_go_7, bool _swig_go_8, bool _swig_go_9, uint32_t *_swig_go_10, _gostring_ _swig_go_11, _gostring_ _swig_go_12) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  int64_t arg5 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  bool arg8 ;
  bool arg9 ;
  bool arg10 ;
  uint32_t arg11 ;
  char *arg12 = (char *) 0 ;
  char *arg13 = (char *) 0 ;
  uint32_t *argp4 ;
  int64_t *argp5 ;
  uint32_t *argp11 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  argp5 = (int64_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg5 = (int64_t)*argp5;
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  arg8 = (bool)_swig_go_7; 
  arg9 = (bool)_swig_go_8; 
  arg10 = (bool)_swig_go_9; 
  
  argp11 = (uint32_t *)_swig_go_10;
  if (argp11 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg11 = (uint32_t)*argp11;
  
  
  arg12 = (char *)malloc(_swig_go_11.n + 1);
  memcpy(arg12, _swig_go_11.p, _swig_go_11.n);
  arg12[_swig_go_11.n] = '\0';
  
  
  arg13 = (char *)malloc(_swig_go_12.n + 1);
  memcpy(arg13, _swig_go_12.p, _swig_go_12.n);
  arg13[_swig_go_12.n] = '\0';
  
  
  result = (int)CfdAddTxInTemplateForFundRawTx(arg1,arg2,(char const *)arg3,arg4,arg5,(char const *)arg6,(char const *)arg7,arg8,arg9,arg10,arg11,(char const *)arg12,(char const *)arg13);
  _swig_go_result = result; 
  free(arg3); 
  free(arg6); 
  free(arg7); 
  free(arg12); 
  free(arg13); 
  return _swig_go_result;
}


intgo _wrap_CfdAddUtxoForFundRawTx_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, int64_t *_swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  int64_t arg5 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  uint32_t *argp4 ;
  int64_t *argp5 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  argp5 = (int64_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg5 = (int64_t)*argp5;
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  result = (int)CfdAddUtxoForFundRawTx(arg1,arg2,(char const *)arg3,arg4,arg5,(char const *)arg6,(char const *)arg7);
  _swig_go_result = result; 
  free(arg3); 
  free(arg6); 
  free(arg7); 
  return _swig_go_result;
}


intgo _wrap_CfdAddUtxoTemplateForFundRawTx_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, uint32_t *_swig_go_3, int64_t *_swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  int64_t arg5 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  uint32_t *argp4 ;
  int64_t *argp5 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  argp5 = (int64_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg5 = (int64_t)*argp5;
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  
  result = (int)CfdAddUtxoTemplateForFundRawTx(arg1,arg2,(char const *)arg3,arg4,arg5,(char const *)arg6,(char const *)arg7,(char const *)arg8);
  _swig_go_result = result; 
  free(arg3); 
  free(arg6); 
  free(arg7); 
  free(arg8); 
  return _swig_go_result;
}


intgo _wrap_CfdAddTargetAmountForFundRawTx_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, uint32_t *_swig_go_2, int64_t *_swig_go_3, _gostring_ _swig_go_4, _gostring_ _swig_go_5) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32_t arg3 ;
  int64_t arg4 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  uint32_t *argp3 ;
  int64_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  
  argp4 = (int64_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg4 = (int64_t)*argp4;
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (int)CfdAddTargetAmountForFundRawTx(arg1,arg2,arg3,arg4,(char const *)arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg5); 
  free(arg6); 
  return _swig_go_result;
}


intgo _wrap_CfdSetOptionFundRawTx_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, int64_t *_swig_go_3, double _swig_go_4, bool _swig_go_5) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  int64_t arg4 ;
  double arg5 ;
  bool arg6 ;
  int64_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  argp4 = (int64_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg4 = (int64_t)*argp4;
  
  arg5 = (double)_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  
  result = (int)CfdSetOptionFundRawTx(arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CfdFinalizeFundRawTx_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2, double _swig_go_3, int64_t *_swig_go_4, uint32_t *_swig_go_5, _gostring_* _swig_go_6) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  double arg4 ;
  int64_t *arg5 = (int64_t *) 0 ;
  uint32_t *arg6 = (uint32_t *) 0 ;
  char **arg7 = (char **) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (double)_swig_go_3; 
  arg5 = *(int64_t **)&_swig_go_4; 
  arg6 = *(uint32_t **)&_swig_go_5; 
  arg7 = *(char ***)&_swig_go_6; 
  
  result = (int)CfdFinalizeFundRawTx(arg1,arg2,(char const *)arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  {
    if (arg7 && *arg7) {
      _swig_go_6->n = strlen(*arg7);
    }
  }
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_CfdGetAppendTxOutFundRawTx_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1, uint32_t *_swig_go_2, _gostring_* _swig_go_3) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32_t arg3 ;
  char **arg4 = (char **) 0 ;
  uint32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  argp3 = (uint32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg3 = (uint32_t)*argp3;
  
  arg4 = *(char ***)&_swig_go_3; 
  
  result = (int)CfdGetAppendTxOutFundRawTx(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  {
    if (arg4 && *arg4) {
      _swig_go_3->n = strlen(*arg4);
    }
  }
  return _swig_go_result;
}


intgo _wrap_CfdFreeFundRawTxHandle_cfdgo_455848a691f6477f(void *_swig_go_0, void *_swig_go_1) {
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)CfdFreeFundRawTxHandle(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


#ifdef __cplusplus
}
#endif

